{"version":3,"file":"index-0E397VFy.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../src/types/web3.ts","../../src/utils/constants.ts","../../src/utils/web3.ts","../../src/providers/Web3Provider.tsx","../../src/components/Header.tsx","../../src/components/Footer.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/pages/HomePage.tsx","../../src/hooks/useContract.ts","../../src/components/pages/VotingPage.tsx","../../src/components/pages/ProposalsPage.tsx","../../src/components/pages/DashboardPage.tsx","../../src/components/pages/NotFoundPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.21.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.28.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (!alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if (!(renderFuture != null && renderFuture.v7_startTransition)) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if (!(renderFuture != null && renderFuture.v7_relativeSplatPath) && (!routerFuture || !routerFuture.v7_relativeSplatPath)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (!routerFuture.v7_fetcherPersist) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (!routerFuture.v7_normalizeFormMethod) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (!routerFuture.v7_partialHydration) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (!routerFuture.v7_skipActionErrorRevalidation) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.28.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n  return void 0;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      if (!this.isFetchingOptimistic) {\n        this.scheduleGc();\n      }\n      this.isFetchingOptimistic = false;\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        if (!this.isFetchingOptimistic) {\n          this.scheduleGc();\n        }\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","import { ethers } from 'ethers'\r\n\r\n// Network configuration\r\nexport interface NetworkConfig {\r\n  chainId: number\r\n  name: string\r\n  rpcUrl: string\r\n  blockExplorer: string\r\n  nativeCurrency: {\r\n    name: string\r\n    symbol: string\r\n    decimals: number\r\n  }\r\n}\r\n\r\n// Wallet state\r\nexport interface WalletState {\r\n  account: string | null\r\n  chainId: number | null\r\n  isConnected: boolean\r\n  isConnecting: boolean\r\n  error: string | null\r\n  balance: string | null\r\n}\r\n\r\n// Contract interaction state\r\nexport interface ContractState {\r\n  contract: ethers.Contract | null\r\n  isLoading: boolean\r\n  error: string | null\r\n}\r\n\r\n// Proposal type\r\nexport enum ProposalType {\r\n  BOARD = 0,\r\n  BUDGET = 1,\r\n  MERGER = 2,\r\n  DIVIDEND = 3,\r\n  BYLAW = 4,\r\n  STRATEGIC = 5\r\n}\r\n\r\nexport const ProposalTypeLabels = {\r\n  [ProposalType.BOARD]: 'Board Election',\r\n  [ProposalType.BUDGET]: 'Budget Approval',\r\n  [ProposalType.MERGER]: 'Merger & Acquisition',\r\n  [ProposalType.DIVIDEND]: 'Dividend Distribution',\r\n  [ProposalType.BYLAW]: 'Bylaw Amendment',\r\n  [ProposalType.STRATEGIC]: 'Strategic Decision'\r\n}\r\n\r\n// Proposal state\r\nexport interface Proposal {\r\n  id: number\r\n  proposalType: ProposalType\r\n  title: string\r\n  description: string\r\n  proposer: string\r\n  deadline: number\r\n  active: boolean\r\n  forVotes: number\r\n  againstVotes: number\r\n  threshold: number\r\n  hasVoted?: boolean\r\n  isExpired?: boolean\r\n  isPassed?: boolean\r\n}\r\n\r\n// Shareholder information\r\nexport interface Shareholder {\r\n  address: string\r\n  shares: number\r\n  name: string\r\n  active: boolean\r\n}\r\n\r\n// Company information\r\nexport interface CompanyInfo {\r\n  name: string\r\n  symbol: string\r\n  totalShares: number\r\n  totalShareholders: number\r\n  boardMembers: string[]\r\n}\r\n\r\n// Transaction state\r\nexport interface TransactionState {\r\n  hash?: string\r\n  status: 'idle' | 'pending' | 'success' | 'error'\r\n  error?: string\r\n}\r\n\r\n// Vote choice\r\nexport enum VoteChoice {\r\n  ABSTAIN = 0,\r\n  FOR = 1,\r\n  AGAINST = 2\r\n}\r\n\r\nexport const VoteChoiceLabels = {\r\n  [VoteChoice.ABSTAIN]: 'Abstain',\r\n  [VoteChoice.FOR]: 'For',\r\n  [VoteChoice.AGAINST]: 'Against'\r\n}\r\n\r\n// Web3 Provider interface\r\nexport interface Web3ProviderContext {\r\n  // Wallet state\r\n  wallet: WalletState\r\n  \r\n  // Contract state\r\n  contract: ContractState\r\n  \r\n  // Wallet operations\r\n  connectWallet: () => Promise<void>\r\n  disconnectWallet: () => void\r\n  switchToSepolia: () => Promise<void>\r\n  \r\n  // Contract operations\r\n  getBalance: () => Promise<string>\r\n  refreshWallet: () => Promise<void>\r\n}\r\n\r\n// Error type\r\nexport class Web3Error extends Error {\r\n  constructor(\r\n    message: string,\r\n    public code?: string,\r\n    public details?: any\r\n  ) {\r\n    super(message)\r\n    this.name = 'Web3Error'\r\n  }\r\n}\r\n\r\n// Common Web3 error codes\r\nexport enum Web3ErrorCode {\r\n  USER_REJECTED = 'USER_REJECTED',\r\n  NETWORK_ERROR = 'NETWORK_ERROR',\r\n  CONTRACT_ERROR = 'CONTRACT_ERROR',\r\n  INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE',\r\n  ALREADY_VOTED = 'ALREADY_VOTED',\r\n  NOT_AUTHORIZED = 'NOT_AUTHORIZED',\r\n  PROPOSAL_EXPIRED = 'PROPOSAL_EXPIRED'\r\n}\r\n\r\n// MetaMask specific errors\r\nexport interface MetaMaskError {\r\n  code: number\r\n  message: string\r\n  data?: any\r\n}\r\n\r\n// Event types\r\nexport interface ProposalCreatedEvent {\r\n  proposalId: number\r\n  proposer: string\r\n  title: string\r\n  proposalType: ProposalType\r\n}\r\n\r\nexport interface VoteCastEvent {\r\n  proposalId: number\r\n  voter: string\r\n  choice: VoteChoice\r\n  weight: number\r\n}\r\n\r\nexport interface ShareholderRegisteredEvent {\r\n  shareholder: string\r\n  shares: number\r\n  name: string\r\n}","import { NetworkConfig } from '@/types/web3'\r\n\r\n// Contract address\r\nexport const CONTRACT_ADDRESS = (import.meta as any).env?.VITE_CONTRACT_ADDRESS || '0x7c04dD380e26B56899493ec7A654EdEf108A2414'\r\n\r\n// Sepolia Testnet Configuration  \r\nexport const SEPOLIA_CONFIG: NetworkConfig = {\r\n  chainId: 11155111, // 0xaa36a7 in hex\r\n  name: 'Sepolia Testnet',\r\n  rpcUrl: (import.meta as any).env?.VITE_RPC_URL || 'https://sepolia.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\r\n  blockExplorer: 'https://sepolia.etherscan.io',\r\n  nativeCurrency: {\r\n    name: 'Sepolia Ether',\r\n    symbol: 'SEP',\r\n    decimals: 18\r\n  }\r\n}\r\n\r\n// Supported networks\r\nexport const SUPPORTED_NETWORKS: Record<number, NetworkConfig> = {\r\n  [SEPOLIA_CONFIG.chainId]: SEPOLIA_CONFIG\r\n}\r\n\r\n// Contract ABI - exported from CorporateGovernanceUltimate.sol\r\nexport const CONTRACT_ABI = [\r\n  // Company management\r\n  \"function initCompany(string memory _name, uint256 _shares) external\",\r\n  \"function companyName() public view returns (string memory)\",\r\n  \"function totalShares() public view returns (uint256)\",\r\n  \"function initialized() public view returns (bool)\",\r\n  \r\n  // Board management\r\n  \"function addBoard(address _member) external\",\r\n  \"function isBoardMember(address _member) external view returns (bool)\",\r\n  \r\n  // Shareholder management\r\n  \"function addShareholder(address _addr, uint32 _shares, string memory _name) external\",\r\n  \"function registerShareholderPlain(address _addr, uint32 _shares, string memory, string memory _name) external\",\r\n  \"function getShareholderInfo(address _addr) external view returns (bool, uint32, string memory, string memory, bool)\",\r\n  \r\n  // Proposal management\r\n  \"function createProposal(uint8 _type, string memory _title, uint256 _days) external returns (uint256)\",\r\n  \"function getTotalProposals() external view returns (uint256)\",\r\n  \"function getProposalBasic(uint256 _id) external view returns (uint8, string memory, address)\",\r\n  \"function getProposalStatus(uint256 _id) external view returns (uint256, bool, uint32)\",\r\n  \"function getProposalInfo(uint256 _id) external view returns (uint256, uint8, string memory, string memory, address, uint256, uint256, bool, bool, uint256, uint256)\",\r\n  \r\n  // Voting\r\n  \"function vote(uint256 _id, uint8 _choice) public\",\r\n  \"function castVotePlain(uint256 _id, uint8 _choice) external\",\r\n  \"function castConfidentialVote(uint256 _id, uint8 _choice) external\",\r\n  \"function voteConfidential(uint256 _id, uint8 _choice) external\",\r\n  \"function hasVotedOn(uint256 _id, address _voter) external view returns (bool)\",\r\n  \r\n  // Proposal finalization\r\n  \"function finalize(uint256 _id) public\",\r\n  \"function finalizeProposal(uint256 _id) external\",\r\n  \"function getResults(uint256 _id) public view returns (uint32, uint32, bool)\",\r\n  \"function getDecryptedResults(uint256 _id) external view returns (uint32, uint32, uint32, bool)\",\r\n  \r\n  // Company info\r\n  \"function getCompanyInfo() external view returns (string memory, string memory, string memory, uint256, uint256, address[] memory)\",\r\n  \r\n  // Events\r\n  \"event CompanyInit(string name)\",\r\n  \"event ShareholderAdd(address indexed addr)\",\r\n  \"event ProposalAdd(uint256 indexed id)\",\r\n  \"event VoteAdd(uint256 indexed id, address indexed voter)\"\r\n] as const\r\n\r\n// Error Messages Mapping\r\nexport const ERROR_MESSAGES: Record<string, string> = {\r\n  // MetaMask Errors\r\n  4001: 'User rejected the request',\r\n  4100: 'The requested method and/or account has not been authorized by the user',\r\n  4200: 'The provider does not support the requested method',\r\n  4900: 'The provider is disconnected from all chains',\r\n  4901: 'The provider is not connected to the requested chain',\r\n  \r\n  // Network Errors\r\n  'NETWORK_ERROR': 'Network connection error, please check your network settings',\r\n  'UNSUPPORTED_NETWORK': 'Unsupported network, please switch to Sepolia testnet',\r\n  \r\n  // Contract Errors\r\n  'EXECUTION_REVERTED': 'Transaction was reverted',\r\n  'INSUFFICIENT_FUNDS': 'Insufficient balance',\r\n  'GAS_LIMIT_EXCEEDED': 'Gas limit exceeded',\r\n  \r\n  // Business Logic Errors\r\n  'ALREADY_VOTED': 'You have already voted',\r\n  'NOT_BOARD_MEMBER': 'You are not a board member',\r\n  'NOT_SHAREHOLDER': 'You are not a shareholder',\r\n  'PROPOSAL_EXPIRED': 'Proposal has expired',\r\n  'PROPOSAL_NOT_ACTIVE': 'Proposal is not active',\r\n  'INVALID_PROPOSAL_ID': 'Invalid proposal ID'\r\n}\r\n\r\n// Gas limit configuration\r\nexport const GAS_LIMITS = {\r\n  VOTE: 100000,\r\n  CREATE_PROPOSAL: 200000,\r\n  ADD_SHAREHOLDER: 150000,\r\n  INIT_COMPANY: 300000\r\n}\r\n\r\n// Application configuration\r\nexport const APP_CONFIG = {\r\n  name: (import.meta as any).env?.VITE_APP_NAME || 'Corporate Governance DApp',\r\n  description: (import.meta as any).env?.VITE_APP_DESCRIPTION || 'Confidential Shareholder Voting - Privacy-focused Corporate Decision System',\r\n  version: '1.0.0'\r\n}\r\n\r\n// Time constants\r\nexport const TIME_CONSTANTS = {\r\n  BLOCK_TIME: 12, // seconds\r\n  CONFIRMATION_BLOCKS: 2,\r\n  POLLING_INTERVAL: 5000, // ms\r\n  RETRY_DELAY: 1000, // ms\r\n  MAX_RETRIES: 3\r\n}\r\n\r\n// UI configuration\r\nexport const UI_CONFIG = {\r\n  TOAST_DURATION: 4000,\r\n  LOADING_DELAY: 300,\r\n  ANIMATION_DURATION: 300\r\n}\r\n\r\n// Local storage keys\r\nexport const STORAGE_KEYS = {\r\n  LAST_CONNECTED_ACCOUNT: 'lastConnectedAccount',\r\n  PREFERRED_NETWORK: 'preferredNetwork',\r\n  USER_PREFERENCES: 'userPreferences'\r\n} as const","import { ethers } from 'ethers'\r\nimport { MetaMaskError, NetworkConfig, Web3Error, Web3ErrorCode } from '@/types/web3'\r\nimport { SEPOLIA_CONFIG, ERROR_MESSAGES } from './constants'\r\n\r\n// Check if MetaMask is available\r\nexport const isMetaMaskInstalled = (): boolean => {\r\n  return typeof window !== 'undefined' && Boolean(window.ethereum?.isMetaMask)\r\n}\r\n\r\n// Get MetaMask provider\r\nexport const getProvider = (): ethers.BrowserProvider | null => {\r\n  if (!isMetaMaskInstalled()) {\r\n    return null\r\n  }\r\n  return new ethers.BrowserProvider(window.ethereum!)\r\n}\r\n\r\n// Request account connection\r\nexport const requestAccounts = async (): Promise<string[]> => {\r\n  if (!isMetaMaskInstalled()) {\r\n    throw new Web3Error('Please install MetaMask wallet', Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n  \r\n  try {\r\n    const accounts = await window.ethereum!.request({\r\n      method: 'eth_requestAccounts',\r\n    }) as string[]\r\n    \r\n    if (accounts.length === 0) {\r\n      throw new Web3Error('No available accounts found', Web3ErrorCode.USER_REJECTED)\r\n    }\r\n    \r\n    return accounts\r\n  } catch (error: any) {\r\n    if (error.code === 4001) {\r\n      throw new Web3Error('User rejected wallet connection', Web3ErrorCode.USER_REJECTED)\r\n    }\r\n    throw new Web3Error(`Failed to connect wallet: ${error.message}`, Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n}\r\n\r\n// Get current network ID\r\nexport const getCurrentChainId = async (): Promise<number> => {\r\n  if (!isMetaMaskInstalled()) {\r\n    throw new Web3Error('MetaMask not installed', Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n  \r\n  const chainId = await window.ethereum!.request({\r\n    method: 'eth_chainId',\r\n  }) as string\r\n  \r\n  return parseInt(chainId, 16)\r\n}\r\n\r\n// Switch network\r\nexport const switchToNetwork = async (networkConfig: NetworkConfig): Promise<void> => {\r\n  if (!isMetaMaskInstalled()) {\r\n    throw new Web3Error('MetaMask not installed', Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n  \r\n  const chainIdHex = `0x${networkConfig.chainId.toString(16)}`\r\n  \r\n  try {\r\n    // Try to switch to specified network\r\n    await window.ethereum!.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: chainIdHex }],\r\n    })\r\n  } catch (error: any) {\r\n    // If network doesn't exist, try to add network\r\n    if (error.code === 4902) {\r\n      try {\r\n        await window.ethereum!.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: chainIdHex,\r\n              chainName: networkConfig.name,\r\n              rpcUrls: [networkConfig.rpcUrl],\r\n              blockExplorerUrls: [networkConfig.blockExplorer],\r\n              nativeCurrency: networkConfig.nativeCurrency,\r\n            },\r\n          ],\r\n        })\r\n      } catch (addError: any) {\r\n        throw new Web3Error(\r\n          `Failed to add network: ${addError.message}`,\r\n          Web3ErrorCode.NETWORK_ERROR\r\n        )\r\n      }\r\n    } else {\r\n      throw new Web3Error(\r\n        `Failed to switch network: ${error.message}`,\r\n        Web3ErrorCode.NETWORK_ERROR\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n// Switch to Sepolia testnet\r\nexport const switchToSepolia = async (): Promise<void> => {\r\n  await switchToNetwork(SEPOLIA_CONFIG)\r\n}\r\n\r\n// Get account balance\r\nexport const getBalance = async (address: string): Promise<string> => {\r\n  const provider = getProvider()\r\n  if (!provider) {\r\n    throw new Web3Error('Unable to get provider', Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n  \r\n  try {\r\n    const balance = await provider.getBalance(address)\r\n    return ethers.formatEther(balance)\r\n  } catch (error: any) {\r\n    throw new Web3Error(`Failed to get balance: ${error.message}`, Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n}\r\n\r\n// Format address (show first 6 and last 4 characters)\r\nexport const formatAddress = (address: string): string => {\r\n  if (!address || address.length < 10) return address\r\n  return `${address.slice(0, 6)}...${address.slice(-4)}`\r\n}\r\n\r\n// Validate Ethereum address\r\nexport const isValidAddress = (address: string): boolean => {\r\n  try {\r\n    return ethers.isAddress(address)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// Format Ether amount\r\nexport const formatEther = (value: string | bigint): string => {\r\n  try {\r\n    const formatted = ethers.formatEther(value)\r\n    const num = parseFloat(formatted)\r\n    \r\n    if (num < 0.0001 && num > 0) {\r\n      return '< 0.0001'\r\n    }\r\n    \r\n    return num.toFixed(4)\r\n  } catch {\r\n    return '0.0000'\r\n  }\r\n}\r\n\r\n// Parse Ether amount\r\nexport const parseEther = (value: string): bigint => {\r\n  try {\r\n    return ethers.parseEther(value)\r\n  } catch (error: any) {\r\n    throw new Web3Error(`Failed to parse amount: ${error.message}`, Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n}\r\n\r\n// Handle MetaMask errors\r\nexport const handleMetaMaskError = (error: MetaMaskError): Web3Error => {\r\n  const message = ERROR_MESSAGES[error.code] || error.message || 'Unknown error'\r\n  \r\n  // Map common error codes\r\n  let code: Web3ErrorCode = Web3ErrorCode.NETWORK_ERROR\r\n  \r\n  switch (error.code) {\r\n    case 4001:\r\n      code = Web3ErrorCode.USER_REJECTED\r\n      break\r\n    case 4100:\r\n      code = Web3ErrorCode.NOT_AUTHORIZED\r\n      break\r\n    case -32602:\r\n      code = Web3ErrorCode.CONTRACT_ERROR\r\n      break\r\n    default:\r\n      if (error.message?.includes('insufficient funds')) {\r\n        code = Web3ErrorCode.INSUFFICIENT_BALANCE\r\n      }\r\n      break\r\n  }\r\n  \r\n  return new Web3Error(message, code, error)\r\n}\r\n\r\n// Wait for transaction confirmation\r\nexport const waitForTransaction = async (\r\n  hash: string,\r\n  confirmations: number = 2\r\n): Promise<ethers.TransactionReceipt> => {\r\n  const provider = getProvider()\r\n  if (!provider) {\r\n    throw new Web3Error('Unable to get provider', Web3ErrorCode.NETWORK_ERROR)\r\n  }\r\n  \r\n  try {\r\n    const receipt = await provider.waitForTransaction(hash, confirmations)\r\n    if (!receipt) {\r\n      throw new Web3Error('Transaction receipt not found', Web3ErrorCode.NETWORK_ERROR)\r\n    }\r\n    return receipt\r\n  } catch (error: any) {\r\n    throw new Web3Error(\r\n      `Failed to wait for transaction confirmation: ${error.message}`,\r\n      Web3ErrorCode.NETWORK_ERROR\r\n    )\r\n  }\r\n}\r\n\r\n// Estimate gas fee\r\nexport const estimateGas = async (\r\n  contract: ethers.Contract,\r\n  method: string,\r\n  args: any[] = []\r\n): Promise<bigint> => {\r\n  try {\r\n    return await contract[method].estimateGas(...args)\r\n  } catch (error: any) {\r\n    throw new Web3Error(\r\n      `Failed to estimate gas fee: ${error.message}`,\r\n      Web3ErrorCode.CONTRACT_ERROR\r\n    )\r\n  }\r\n}\r\n\r\n// Format timestamp\r\nexport const formatTimestamp = (timestamp: number): string => {\r\n  const date = new Date(timestamp * 1000)\r\n  return date.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  })\r\n}\r\n\r\n// Calculate remaining time\r\nexport const getRemainingTime = (deadline: number): string => {\r\n  const now = Math.floor(Date.now() / 1000)\r\n  const remaining = deadline - now\r\n  \r\n  if (remaining <= 0) {\r\n    return 'Expired'\r\n  }\r\n  \r\n  const days = Math.floor(remaining / (24 * 60 * 60))\r\n  const hours = Math.floor((remaining % (24 * 60 * 60)) / (60 * 60))\r\n  const minutes = Math.floor((remaining % (60 * 60)) / 60)\r\n  \r\n  if (days > 0) {\r\n    return `${days}d ${hours}h`\r\n  } else if (hours > 0) {\r\n    return `${hours}h ${minutes}m`\r\n  } else {\r\n    return `${minutes}m`\r\n  }\r\n}\r\n\r\n// Check if mobile device\r\nexport const isMobile = (): boolean => {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  )\r\n}\r\n\r\n// Get block explorer link\r\nexport const getExplorerLink = (hash: string, type: 'tx' | 'address' = 'tx'): string => {\r\n  return `${SEPOLIA_CONFIG.blockExplorer}/${type}/${hash}`\r\n}\r\n\r\n// Delay function\r\nexport const delay = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\n// Retry logic\r\nexport const retry = async <T>(\r\n  fn: () => Promise<T>,\r\n  retries: number = 3,\r\n  delayMs: number = 1000\r\n): Promise<T> => {\r\n  try {\r\n    return await fn()\r\n  } catch (error) {\r\n    if (retries > 0) {\r\n      await delay(delayMs)\r\n      return retry(fn, retries - 1, delayMs * 2) // Exponential backoff\r\n    }\r\n    throw error\r\n  }\r\n}","import React, { createContext, useContext, useEffect, useReducer, useCallback } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport {\r\n  WalletState,\r\n  ContractState,\r\n  Web3ProviderContext,\r\n  Web3Error,\r\n  Web3ErrorCode,\r\n} from '@/types/web3'\r\nimport {\r\n  isMetaMaskInstalled,\r\n  getProvider,\r\n  requestAccounts,\r\n  getCurrentChainId,\r\n  switchToSepolia,\r\n  getBalance,\r\n  handleMetaMaskError,\r\n} from '@/utils/web3'\r\nimport { CONTRACT_ADDRESS, CONTRACT_ABI, SEPOLIA_CONFIG } from '@/utils/constants'\r\n\r\n// Provider state type\r\ninterface Web3State {\r\n  wallet: WalletState\r\n  contract: ContractState\r\n}\r\n\r\n// Action type\r\ntype Web3Action =\r\n  | { type: 'SET_CONNECTING'; payload: boolean }\r\n  | { type: 'SET_WALLET'; payload: Partial<WalletState> }\r\n  | { type: 'SET_CONTRACT'; payload: Partial<ContractState> }\r\n  | { type: 'SET_ERROR'; payload: string }\r\n  | { type: 'RESET_WALLET' }\r\n\r\n// Initial state\r\nconst initialState: Web3State = {\r\n  wallet: {\r\n    account: null,\r\n    chainId: null,\r\n    isConnected: false,\r\n    isConnecting: false,\r\n    error: null,\r\n    balance: null,\r\n  },\r\n  contract: {\r\n    contract: null,\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n}\r\n\r\n// Reducer\r\nconst web3Reducer = (state: Web3State, action: Web3Action): Web3State => {\r\n  switch (action.type) {\r\n    case 'SET_CONNECTING':\r\n      return {\r\n        ...state,\r\n        wallet: { ...state.wallet, isConnecting: action.payload, error: null },\r\n      }\r\n    case 'SET_WALLET':\r\n      return {\r\n        ...state,\r\n        wallet: { ...state.wallet, ...action.payload },\r\n      }\r\n    case 'SET_CONTRACT':\r\n      return {\r\n        ...state,\r\n        contract: { ...state.contract, ...action.payload },\r\n      }\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        wallet: { ...state.wallet, error: action.payload },\r\n      }\r\n    case 'RESET_WALLET':\r\n      return {\r\n        ...state,\r\n        wallet: initialState.wallet,\r\n        contract: initialState.contract,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Context creation\r\nconst Web3Context = createContext<Web3ProviderContext | null>(null)\r\n\r\n// Provider component properties\r\ninterface Web3ProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const Web3Provider: React.FC<Web3ProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(web3Reducer, initialState)\r\n\r\n  // Initialize contract instance\r\n  const initializeContract = useCallback(async (signer: ethers.Signer) => {\r\n    try {\r\n      dispatch({ type: 'SET_CONTRACT', payload: { isLoading: true, error: null } })\r\n      \r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer)\r\n      \r\n      // Test contract connection\r\n      try {\r\n        await contract.companyName()\r\n      } catch (error: any) {\r\n        console.warn('Contract test call failed:', error.message)\r\n        // Continue using contract, may be newly deployed contract\r\n      }\r\n      \r\n      dispatch({\r\n        type: 'SET_CONTRACT',\r\n        payload: { contract, isLoading: false, error: null },\r\n      })\r\n    } catch (error: any) {\r\n      const errorMessage = `Failed to initialize contract: ${error.message}`\r\n      dispatch({\r\n        type: 'SET_CONTRACT',\r\n        payload: { contract: null, isLoading: false, error: errorMessage },\r\n      })\r\n      toast.error(errorMessage)\r\n    }\r\n  }, [])\r\n\r\n  // Get balance\r\n  const getWalletBalance = useCallback(async (): Promise<string> => {\r\n    if (!state.wallet.account) {\r\n      throw new Web3Error('Wallet not connected', Web3ErrorCode.NOT_AUTHORIZED)\r\n    }\r\n    \r\n    try {\r\n      const balance = await getBalance(state.wallet.account)\r\n      dispatch({ type: 'SET_WALLET', payload: { balance } })\r\n      return balance\r\n    } catch (error: any) {\r\n      const errorMessage = `Failed to get balance: ${error.message}`\r\n      dispatch({ type: 'SET_ERROR', payload: errorMessage })\r\n      throw new Web3Error(errorMessage, Web3ErrorCode.NETWORK_ERROR)\r\n    }\r\n  }, [state.wallet.account])\r\n\r\n  // Connect wallet with 7-step process\r\n  const connectWallet = useCallback(async (): Promise<void> => {\r\n    try {\r\n      dispatch({ type: 'SET_CONNECTING', payload: true })\r\n\r\n      // Step 1: Detection - Check window.ethereum (MetaMask provider)\r\n      if (!isMetaMaskInstalled()) {\r\n        const errorMessage = 'Please install MetaMask wallet'\r\n        toast.error(errorMessage)\r\n        dispatch({ type: 'SET_ERROR', payload: errorMessage })\r\n        return\r\n      }\r\n\r\n      // Step 2: Request Access - Use eth_requestAccounts to get user permission\r\n      const accounts = await requestAccounts()\r\n      const account = accounts[0]\r\n\r\n      // Step 3: Network Verification - Verify connection to Sepolia testnet (0xaa36a7)\r\n      const chainId = await getCurrentChainId()\r\n      const expectedChainId = SEPOLIA_CONFIG.chainId // 11155111 (0xaa36a7)\r\n\r\n      // Step 4: Network Switching - Auto switch/add Sepolia if needed\r\n      if (chainId !== expectedChainId) {\r\n        try {\r\n          await switchToSepolia()\r\n          // Verify the switch was successful\r\n          const newChainId = await getCurrentChainId()\r\n          if (newChainId !== expectedChainId) {\r\n            throw new Error('Failed to switch to Sepolia testnet')\r\n          }\r\n        } catch (switchError: any) {\r\n          const errorMessage = 'Please manually switch to Sepolia testnet'\r\n          toast.error(errorMessage)\r\n          dispatch({ type: 'SET_ERROR', payload: errorMessage })\r\n          return\r\n        }\r\n      }\r\n\r\n      // Step 5: Provider Setup - Create ethers.js BrowserProvider and signer\r\n      const provider = getProvider()\r\n      if (!provider) {\r\n        throw new Error('Failed to get provider')\r\n      }\r\n      const signer = await provider.getSigner()\r\n\r\n      // Step 6: Contract Initialization - Create game contract instance\r\n      await initializeContract(signer)\r\n\r\n      // Step 7: State Update - Update React state with account and contract\r\n      dispatch({\r\n        type: 'SET_WALLET',\r\n        payload: {\r\n          account,\r\n          chainId: expectedChainId,\r\n          isConnected: true,\r\n          isConnecting: false,\r\n          error: null,\r\n        },\r\n      })\r\n\r\n      // Get initial state - fetch balance\r\n      try {\r\n        const balance = await getBalance(account)\r\n        dispatch({ type: 'SET_WALLET', payload: { balance } })\r\n      } catch (balanceError) {\r\n        console.warn('Failed to fetch balance:', balanceError)\r\n      }\r\n\r\n      // Success handling\r\n      toast.success(`Connected to Sepolia! ✅`)\r\n      \r\n      // Save to local storage\r\n      localStorage.setItem('lastConnectedAccount', account)\r\n      \r\n    } catch (error: any) {\r\n      const web3Error = error instanceof Web3Error ? error : handleMetaMaskError(error)\r\n      \r\n      dispatch({\r\n        type: 'SET_WALLET',\r\n        payload: {\r\n          isConnecting: false,\r\n          error: web3Error.message,\r\n        },\r\n      })\r\n      \r\n      toast.error(web3Error.message)\r\n    }\r\n  }, [getWalletBalance, initializeContract])\r\n\r\n  // Disconnect wallet\r\n  const disconnectWallet = useCallback((): void => {\r\n    dispatch({ type: 'RESET_WALLET' })\r\n    localStorage.removeItem('lastConnectedAccount')\r\n    toast.success('Wallet disconnected')\r\n  }, [])\r\n\r\n  // Refresh wallet information\r\n  const refreshWallet = useCallback(async (): Promise<void> => {\r\n    if (!state.wallet.isConnected || !state.wallet.account) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      // Refresh balance\r\n      const balance = await getBalance(state.wallet.account)\r\n      dispatch({ type: 'SET_WALLET', payload: { balance } })\r\n      \r\n      // Reinitialize contract\r\n      const provider = getProvider()\r\n      if (provider) {\r\n        const signer = await provider.getSigner()\r\n        await initializeContract(signer)\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to refresh wallet information:', error)\r\n    }\r\n  }, [state.wallet.isConnected, state.wallet.account, getWalletBalance, initializeContract])\r\n\r\n  // Listen for account changes\r\n  useEffect(() => {\r\n    if (!isMetaMaskInstalled()) return\r\n\r\n    const handleAccountsChanged = (accounts: string[]) => {\r\n      if (accounts.length === 0) {\r\n        disconnectWallet()\r\n      } else if (accounts[0] !== state.wallet.account) {\r\n        // Account changed, reconnect\r\n        connectWallet()\r\n      }\r\n    }\r\n\r\n    const handleChainChanged = (chainId: string) => {\r\n      const newChainId = parseInt(chainId, 16)\r\n      if (newChainId !== SEPOLIA_CONFIG.chainId && state.wallet.isConnected) {\r\n        toast.error('Please switch to Sepolia testnet')\r\n        dispatch({\r\n          type: 'SET_WALLET',\r\n          payload: { chainId: newChainId, error: 'Network mismatch' },\r\n        })\r\n      } else if (newChainId === SEPOLIA_CONFIG.chainId) {\r\n        dispatch({\r\n          type: 'SET_WALLET',\r\n          payload: { chainId: newChainId, error: null },\r\n        })\r\n        refreshWallet()\r\n      }\r\n    }\r\n\r\n    const handleDisconnect = () => {\r\n      disconnectWallet()\r\n    }\r\n\r\n    // Add event listeners\r\n    window.ethereum?.on('accountsChanged', handleAccountsChanged)\r\n    window.ethereum?.on('chainChanged', handleChainChanged)\r\n    window.ethereum?.on('disconnect', handleDisconnect)\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.ethereum?.removeListener('accountsChanged', handleAccountsChanged)\r\n      window.ethereum?.removeListener('chainChanged', handleChainChanged)\r\n      window.ethereum?.removeListener('disconnect', handleDisconnect)\r\n    }\r\n  }, [state.wallet.account, state.wallet.isConnected, connectWallet, disconnectWallet, refreshWallet])\r\n\r\n  // Auto-connect to last used account\r\n  useEffect(() => {\r\n    const autoConnect = async () => {\r\n      const lastAccount = localStorage.getItem('lastConnectedAccount')\r\n      if (lastAccount && isMetaMaskInstalled()) {\r\n        try {\r\n          const accounts = await window.ethereum!.request({ method: 'eth_accounts' }) as string[]\r\n          if (accounts.includes(lastAccount)) {\r\n            await connectWallet()\r\n          }\r\n        } catch (error) {\r\n          console.warn('Auto-connect failed:', error)\r\n        }\r\n      }\r\n    }\r\n\r\n    autoConnect()\r\n  }, []) // Only execute when component mounts\r\n\r\n  // Context value\r\n  const contextValue: Web3ProviderContext = {\r\n    wallet: state.wallet,\r\n    contract: state.contract,\r\n    connectWallet,\r\n    disconnectWallet,\r\n    switchToSepolia,\r\n    getBalance: getWalletBalance,\r\n    refreshWallet,\r\n  }\r\n\r\n  return <Web3Context.Provider value={contextValue}>{children}</Web3Context.Provider>\r\n}\r\n\r\n// Hook using Context\r\nexport const useWeb3 = (): Web3ProviderContext => {\r\n  const context = useContext(Web3Context)\r\n  if (!context) {\r\n    throw new Error('useWeb3 must be used within a Web3Provider')\r\n  }\r\n  return context\r\n}\r\n\r\n// Extend window type to support ethereum\r\ndeclare global {\r\n  interface Window {\r\n    ethereum?: {\r\n      isMetaMask?: boolean\r\n      request: (request: { method: string; params?: any[] }) => Promise<any>\r\n      on: (event: string, callback: (...args: any[]) => void) => void\r\n      removeListener: (event: string, callback: (...args: any[]) => void) => void\r\n    }\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport { formatAddress, isMetaMaskInstalled } from '@/utils/web3'\r\nimport { Shield, Menu, X, Wallet, LogOut, ChevronDown } from 'lucide-react'\r\n\r\nconst Header: React.FC = () => {\r\n  const { wallet, connectWallet, disconnectWallet } = useWeb3()\r\n  const location = useLocation()\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\r\n  const [isWalletMenuOpen, setIsWalletMenuOpen] = useState(false)\r\n\r\n  const navigation = [\r\n    { name: 'Home', href: '/', current: location.pathname === '/' },\r\n    { name: 'Vote', href: '/vote', current: location.pathname.startsWith('/vote') },\r\n    { name: 'Proposals', href: '/proposals', current: location.pathname.startsWith('/proposals') },\r\n    { name: 'Dashboard', href: '/dashboard', current: location.pathname.startsWith('/dashboard') },\r\n  ]\r\n\r\n  const handleConnectWallet = async () => {\r\n    if (!isMetaMaskInstalled()) {\r\n      window.open('https://metamask.io/download/', '_blank')\r\n      return\r\n    }\r\n    await connectWallet()\r\n  }\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen)\r\n  }\r\n\r\n  const toggleWalletMenu = () => {\r\n    setIsWalletMenuOpen(!isWalletMenuOpen)\r\n  }\r\n\r\n  return (\r\n    <header className=\"bg-white/10 backdrop-blur-md border-b border-white/20 sticky top-0 z-50\">\r\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center h-16\">\r\n          {/* Logo */}\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n              <Shield className=\"h-8 w-8 text-blue-400\" />\r\n              <div className=\"flex flex-col\">\r\n                <span className=\"font-bold text-white text-lg\">CorporateDAO</span>\r\n                <span className=\"text-xs text-blue-200\">Corporate Governance</span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* Desktop Navigation */}\r\n          <div className=\"hidden md:block\">\r\n            <div className=\"ml-10 flex items-baseline space-x-4\">\r\n              {navigation.map((item) => (\r\n                <Link\r\n                  key={item.name}\r\n                  to={item.href}\r\n                  className={`px-3 py-2 rounded-md text-sm font-medium transition-all duration-200 ${\r\n                    item.current\r\n                      ? 'bg-blue-500/20 text-blue-300 border-b-2 border-blue-400'\r\n                      : 'text-gray-300 hover:bg-white/10 hover:text-white'\r\n                  }`}\r\n                >\r\n                  {item.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Wallet Connection */}\r\n          <div className=\"hidden md:block\">\r\n            {wallet.isConnected ? (\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={toggleWalletMenu}\r\n                  className=\"flex items-center space-x-2 bg-green-500/20 text-green-300 px-4 py-2 rounded-lg border border-green-500/30 hover:bg-green-500/30 transition-all duration-200\"\r\n                >\r\n                  <Wallet className=\"h-4 w-4\" />\r\n                  <span className=\"font-mono text-sm\">\r\n                    {formatAddress(wallet.account!)}\r\n                  </span>\r\n                  {wallet.balance && (\r\n                    <span className=\"text-xs bg-green-500/30 px-2 py-1 rounded\">\r\n                      {parseFloat(wallet.balance).toFixed(4)} SEP\r\n                    </span>\r\n                  )}\r\n                  <ChevronDown className=\"h-4 w-4\" />\r\n                </button>\r\n\r\n                {/* Wallet Dropdown */}\r\n                {isWalletMenuOpen && (\r\n                  <div className=\"absolute right-0 mt-2 w-64 bg-gray-800/95 backdrop-blur-md rounded-lg shadow-lg border border-gray-600 z-10\">\r\n                    <div className=\"p-4 border-b border-gray-600\">\r\n                      <div className=\"text-sm text-gray-300\">Wallet Address</div>\r\n                      <div className=\"font-mono text-sm text-white break-all\">\r\n                        {wallet.account}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-300 mt-2\">Balance</div>\r\n                      <div className=\"text-lg font-semibold text-green-400\">\r\n                        {wallet.balance ? `${parseFloat(wallet.balance).toFixed(4)} SEP` : 'Loading...'}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          disconnectWallet()\r\n                          setIsWalletMenuOpen(false)\r\n                        }}\r\n                        className=\"w-full flex items-center space-x-2 px-3 py-2 text-red-300 hover:bg-red-500/20 rounded-md transition-all duration-200\"\r\n                      >\r\n                        <LogOut className=\"h-4 w-4\" />\r\n                        <span>Disconnect</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={handleConnectWallet}\r\n                disabled={wallet.isConnecting}\r\n                className=\"gradient-button flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {wallet.isConnecting ? (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                    <span>Connecting...</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Wallet className=\"h-4 w-4\" />\r\n                    <span>Connect Wallet</span>\r\n                  </>\r\n                )}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Mobile menu button */}\r\n          <div className=\"md:hidden\">\r\n            <button\r\n              onClick={toggleMobileMenu}\r\n              className=\"text-gray-300 hover:text-white p-2\"\r\n            >\r\n              {isMobileMenuOpen ? (\r\n                <X className=\"h-6 w-6\" />\r\n              ) : (\r\n                <Menu className=\"h-6 w-6\" />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Navigation */}\r\n        {isMobileMenuOpen && (\r\n          <div className=\"md:hidden border-t border-white/20 mt-4 pt-4 pb-4\">\r\n            <div className=\"space-y-1\">\r\n              {navigation.map((item) => (\r\n                <Link\r\n                  key={item.name}\r\n                  to={item.href}\r\n                  onClick={() => setIsMobileMenuOpen(false)}\r\n                  className={`block px-3 py-2 rounded-md text-base font-medium transition-all duration-200 ${\r\n                    item.current\r\n                      ? 'bg-blue-500/20 text-blue-300'\r\n                      : 'text-gray-300 hover:bg-white/10 hover:text-white'\r\n                  }`}\r\n                >\r\n                  {item.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Mobile Wallet Section */}\r\n            <div className=\"mt-4 pt-4 border-t border-white/20\">\r\n              {wallet.isConnected ? (\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"px-3 py-2\">\r\n                    <div className=\"text-sm text-gray-300\">Connected Address</div>\r\n                    <div className=\"font-mono text-sm text-white\">\r\n                      {formatAddress(wallet.account!)}\r\n                    </div>\r\n                    {wallet.balance && (\r\n                      <div className=\"text-sm text-green-400 mt-1\">\r\n                        Balance: {parseFloat(wallet.balance).toFixed(4)} SEP\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      disconnectWallet()\r\n                      setIsMobileMenuOpen(false)\r\n                    }}\r\n                    className=\"w-full flex items-center justify-center space-x-2 px-3 py-2 bg-red-500/20 text-red-300 rounded-md\"\r\n                  >\r\n                    <LogOut className=\"h-4 w-4\" />\r\n                    <span>Disconnect</span>\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <button\r\n                  onClick={() => {\r\n                    handleConnectWallet()\r\n                    setIsMobileMenuOpen(false)\r\n                  }}\r\n                  disabled={wallet.isConnecting}\r\n                  className=\"w-full gradient-button flex items-center justify-center space-x-2 disabled:opacity-50\"\r\n                >\r\n                  {wallet.isConnecting ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                      <span>Connecting...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Wallet className=\"h-4 w-4\" />\r\n                      <span>Connect Wallet</span>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      {/* Click outside to close dropdown menu */}\r\n      {isWalletMenuOpen && (\r\n        <div\r\n          className=\"fixed inset-0 z-0\"\r\n          onClick={() => setIsWalletMenuOpen(false)}\r\n        />\r\n      )}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Shield, Github, ExternalLink } from 'lucide-react'\r\nimport { getExplorerLink } from '@/utils/web3'\r\nimport { CONTRACT_ADDRESS } from '@/utils/constants'\r\n\r\nconst Footer: React.FC = () => {\r\n  const currentYear = new Date().getFullYear()\r\n\r\n  return (\r\n    <footer className=\"bg-black/20 border-t border-white/10 mt-auto\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\r\n          {/* Logo & Description */}\r\n          <div className=\"col-span-1 md:col-span-2\">\r\n            <div className=\"flex items-center space-x-2 mb-4\">\r\n              <Shield className=\"h-8 w-8 text-blue-400\" />\r\n              <div>\r\n                <h3 className=\"text-white font-bold text-lg\">CorporateDAO</h3>\r\n                <p className=\"text-blue-200 text-sm\">Corporate Governance Voting System</p>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-300 text-sm leading-relaxed max-w-md\">\r\n              Blockchain-based corporate governance voting platform supporting confidential voting and transparent decision-making.\r\n              Smart contracts ensure fairness and immutability of the voting process.\r\n            </p>\r\n            <div className=\"mt-4 flex items-center space-x-4\">\r\n              <div className=\"text-xs text-gray-400\">\r\n                <span className=\"inline-block w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse\"></span>\r\n                Sepolia Testnet\r\n              </div>\r\n              <a\r\n                href={getExplorerLink(CONTRACT_ADDRESS, 'address')}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"text-xs text-blue-400 hover:text-blue-300 flex items-center space-x-1\"\r\n              >\r\n                <span>View Contract</span>\r\n                <ExternalLink className=\"h-3 w-3\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Links */}\r\n          <div>\r\n            <h4 className=\"text-white font-semibold mb-4\">Quick Links</h4>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li>\r\n                <a href=\"/\" className=\"text-gray-300 hover:text-white transition-colors\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/vote\" className=\"text-gray-300 hover:text-white transition-colors\">\r\n                  Participate in Voting\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/proposals\" className=\"text-gray-300 hover:text-white transition-colors\">\r\n                  View Proposals\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/dashboard\" className=\"text-gray-300 hover:text-white transition-colors\">\r\n                  Management Dashboard\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Resources */}\r\n          <div>\r\n            <h4 className=\"text-white font-semibold mb-4\">Resources</h4>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li>\r\n                <a\r\n                  href=\"https://docs.metamask.io/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-300 hover:text-white transition-colors flex items-center space-x-1\"\r\n                >\r\n                  <span>MetaMask Documentation</span>\r\n                  <ExternalLink className=\"h-3 w-3\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://sepolia.etherscan.io/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-300 hover:text-white transition-colors flex items-center space-x-1\"\r\n                >\r\n                  <span>Sepolia Explorer</span>\r\n                  <ExternalLink className=\"h-3 w-3\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://sepoliafaucet.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-300 hover:text-white transition-colors flex items-center space-x-1\"\r\n                >\r\n                  <span>Get Test Tokens</span>\r\n                  <ExternalLink className=\"h-3 w-3\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://ethereum.org/zh/developers/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-300 hover:text-white transition-colors flex items-center space-x-1\"\r\n                >\r\n                  <span>Ethereum Development</span>\r\n                  <ExternalLink className=\"h-3 w-3\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom Section */}\r\n        <div className=\"mt-8 pt-6 border-t border-white/10\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\r\n            <div className=\"text-sm text-gray-400\">\r\n              © {currentYear} CorporateDAO. Blockchain-based corporate governance voting platform.\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-6\">\r\n              {/* Technical Info */}\r\n              <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n                <span className=\"flex items-center space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-blue-400 rounded-full\"></div>\r\n                  <span>React + TypeScript</span>\r\n                </span>\r\n                <span className=\"flex items-center space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-purple-400 rounded-full\"></div>\r\n                  <span>Ethers.js</span>\r\n                </span>\r\n                <span className=\"flex items-center space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\r\n                  <span>Solidity</span>\r\n                </span>\r\n              </div>\r\n\r\n              {/* Social Links */}\r\n              <div className=\"flex items-center space-x-3\">\r\n                <a\r\n                  href=\"https://github.com\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  title=\"GitHub\"\r\n                >\r\n                  <Github className=\"h-5 w-5\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Contract Address */}\r\n          <div className=\"mt-4 text-center\">\r\n            <div className=\"text-xs text-gray-500\">\r\n              Contract Address: \r\n              <a\r\n                href={getExplorerLink(CONTRACT_ADDRESS, 'address')}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"ml-1 text-blue-400 hover:text-blue-300 font-mono\"\r\n              >\r\n                {CONTRACT_ADDRESS}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large'\r\n  text?: string\r\n  className?: string\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  size = 'medium',\r\n  text,\r\n  className = ''\r\n}) => {\r\n  const sizeClasses = {\r\n    small: 'h-4 w-4',\r\n    medium: 'h-8 w-8',\r\n    large: 'h-12 w-12'\r\n  }\r\n\r\n  const spinnerClass = `animate-spin rounded-full border-2 border-blue-200 border-t-blue-600 ${sizeClasses[size]}`\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center space-y-2 ${className}`}>\r\n      <div className={spinnerClass} />\r\n      {text && (\r\n        <p className=\"text-gray-300 text-sm font-medium animate-pulse\">\r\n          {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport { \r\n  Shield, \r\n  Vote, \r\n  Users, \r\n  TrendingUp, \r\n  Lock, \r\n  CheckCircle,\r\n  ArrowRight,\r\n  Zap,\r\n  Globe\r\n} from 'lucide-react'\r\n\r\nconst HomePage: React.FC = () => {\r\n  const { wallet } = useWeb3()\r\n\r\n  const features = [\r\n    {\r\n      icon: Shield,\r\n      title: 'Blockchain Security',\r\n      description: 'Built on Ethereum smart contracts ensuring transparent and immutable voting process'\r\n    },\r\n    {\r\n      icon: Lock,\r\n      title: 'Private Voting',\r\n      description: 'Support confidential voting features, protecting voter privacy while ensuring verifiable results'\r\n    },\r\n    {\r\n      icon: Users,\r\n      title: 'Governance Transparency',\r\n      description: 'Complete corporate governance workflow from proposal creation to transparent voting results'\r\n    },\r\n    {\r\n      icon: Zap,\r\n      title: 'Real-time Updates',\r\n      description: 'Real-time voting progress and results display, supporting multiple proposal types'\r\n    }\r\n  ]\r\n\r\n  const stats = [\r\n    { label: 'Total Proposals', value: '156', icon: Vote },\r\n    { label: 'Active Shareholders', value: '42', icon: Users },\r\n    { label: 'Participation Rate', value: '89%', icon: TrendingUp },\r\n    { label: 'Successful Governance', value: '134', icon: CheckCircle }\r\n  ]\r\n\r\n  const proposalTypes = [\r\n    { name: 'Board Election', desc: 'Election and appointment of board members', color: 'from-blue-500 to-purple-500' },\r\n    { name: 'Budget Approval', desc: 'Annual budget and major expenditure approval', color: 'from-green-500 to-teal-500' },\r\n    { name: 'Mergers & Acquisitions', desc: 'Corporate merger and acquisition decisions', color: 'from-red-500 to-pink-500' },\r\n    { name: 'Strategic Decisions', desc: 'Corporate development strategy and major decisions', color: 'from-orange-500 to-yellow-500' }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"space-y-16\">\r\n      {/* Hero Section */}\r\n      <section className=\"text-center space-y-8 py-12\">\r\n        <div className=\"space-y-4\">\r\n          <h1 className=\"text-5xl md:text-7xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\r\n            CorporateDAO\r\n          </h1>\r\n          <p className=\"text-xl md:text-2xl text-gray-300 max-w-3xl mx-auto\">\r\n            Blockchain-Based Corporate Governance Voting System\r\n          </p>\r\n          <p className=\"text-lg text-gray-400 max-w-2xl mx-auto\">\r\n            Utilizing Ethereum smart contract technology to achieve transparent, fair, and immutable corporate decision-making voting processes\r\n          </p>\r\n        </div>\r\n\r\n        {/* CTA Buttons */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\r\n          {wallet.isConnected ? (\r\n            <>\r\n              <Link\r\n                to=\"/vote\"\r\n                className=\"gradient-button flex items-center space-x-2 text-lg px-8 py-4\"\r\n              >\r\n                <Vote className=\"h-5 w-5\" />\r\n                <span>Start Voting</span>\r\n                <ArrowRight className=\"h-5 w-5\" />\r\n              </Link>\r\n              <Link\r\n                to=\"/proposals\"\r\n                className=\"btn-secondary flex items-center space-x-2 text-lg px-8 py-4\"\r\n              >\r\n                <Users className=\"h-5 w-5\" />\r\n                <span>View Proposals</span>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <div className=\"bg-yellow-500/20 border border-yellow-500/30 text-yellow-300 px-6 py-3 rounded-lg flex items-center space-x-2\">\r\n              <Globe className=\"h-5 w-5\" />\r\n              <span>Please connect your wallet to get started</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Network Info */}\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"bg-green-500/20 border border-green-500/30 text-green-300 px-4 py-2 rounded-full text-sm flex items-center space-x-2\">\r\n            <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n            <span>Running on Sepolia Testnet</span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Stats Section */}\r\n      <section className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {stats.map((stat, index) => {\r\n          const Icon = stat.icon\r\n          return (\r\n            <div key={index} className=\"glass-card text-center p-6 hover:scale-105 transition-transform\">\r\n              <Icon className=\"h-8 w-8 text-blue-400 mx-auto mb-3\" />\r\n              <div className=\"text-3xl font-bold text-white mb-2\">{stat.value}</div>\r\n              <div className=\"text-gray-300 text-sm\">{stat.label}</div>\r\n            </div>\r\n          )\r\n        })}\r\n      </section>\r\n\r\n      {/* Features Section */}\r\n      <section className=\"space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-white mb-4\">Core Features</h2>\r\n          <p className=\"text-gray-400 max-w-2xl mx-auto\">\r\n            Our platform provides comprehensive corporate governance solutions, ensuring every decision is transparent and fair\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          {features.map((feature, index) => {\r\n            const Icon = feature.icon\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"glass-card p-6 hover:bg-white/15 transition-all duration-300 group\"\r\n              >\r\n                <div className=\"flex items-start space-x-4\">\r\n                  <div className=\"bg-blue-500/20 p-3 rounded-lg group-hover:bg-blue-500/30 transition-colors\">\r\n                    <Icon className=\"h-6 w-6 text-blue-400\" />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                      {feature.title}\r\n                    </h3>\r\n                    <p className=\"text-gray-300\">\r\n                      {feature.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Proposal Types */}\r\n      <section className=\"space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-white mb-4\">Supported Proposal Types</h2>\r\n          <p className=\"text-gray-400 max-w-2xl mx-auto\">\r\n            We support various types of corporate governance proposals to meet different decision-making needs\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {proposalTypes.map((type, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"glass-card p-6 hover:scale-105 transition-transform cursor-pointer group\"\r\n            >\r\n              <div className={`h-2 w-full bg-gradient-to-r ${type.color} rounded-full mb-4 opacity-70 group-hover:opacity-100 transition-opacity`} />\r\n              <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                {type.name}\r\n              </h3>\r\n              <p className=\"text-gray-300\">\r\n                {type.desc}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* How it Works */}\r\n      <section className=\"space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-white mb-4\">How It Works</h2>\r\n          <p className=\"text-gray-400 max-w-2xl mx-auto\">\r\n            Complete corporate governance voting in four simple steps\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          {[\r\n            { step: '1', title: 'Connect Wallet', desc: 'Connect to Sepolia testnet using MetaMask' },\r\n            { step: '2', title: 'View Proposals', desc: 'Browse currently active voting proposals' },\r\n            { step: '3', title: 'Participate in Voting', desc: 'Choose support or opposition, submit your vote' },\r\n            { step: '4', title: 'View Results', desc: 'Monitor voting progress and final results in real-time' }\r\n          ].map((item, index) => (\r\n            <div key={index} className=\"text-center group\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-lg mx-auto mb-4 group-hover:scale-110 transition-transform\">\r\n                {item.step}\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">\r\n                {item.title}\r\n              </h3>\r\n              <p className=\"text-gray-400 text-sm\">\r\n                {item.desc}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"bg-gradient-to-r from-blue-600/20 to-purple-600/20 rounded-2xl p-8 text-center border border-blue-500/30\">\r\n        <h2 className=\"text-3xl font-bold text-white mb-4\">\r\n          Ready to Start Corporate Governance Voting?\r\n        </h2>\r\n        <p className=\"text-gray-300 mb-6 max-w-2xl mx-auto\">\r\n          Join our decentralized governance platform and participate in transparent, fair corporate decision-making processes\r\n        </p>\r\n        {wallet.isConnected ? (\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className=\"gradient-button flex items-center space-x-2 text-lg px-8 py-4\"\r\n            >\r\n              <TrendingUp className=\"h-5 w-5\" />\r\n              <span>Dashboard</span>\r\n            </Link>\r\n            <Link\r\n              to=\"/vote\"\r\n              className=\"btn-secondary flex items-center space-x-2 text-lg px-8 py-4\"\r\n            >\r\n              <Vote className=\"h-5 w-5\" />\r\n              <span>Vote Now</span>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-orange-500/20 border border-orange-500/30 text-orange-300 px-6 py-3 rounded-lg inline-flex items-center space-x-2\">\r\n            <Shield className=\"h-5 w-5\" />\r\n            <span>Connect MetaMask wallet to continue</span>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import { useState, useEffect, useCallback } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport toast from 'react-hot-toast'\r\n\r\nexport interface OnChainProposal {\r\n  id: number\r\n  proposalType: number\r\n  title: string\r\n  description: string\r\n  proposer: string\r\n  deadline: number\r\n  startTime: number\r\n  active: boolean\r\n  executed: boolean\r\n  forVotes: number\r\n  againstVotes: number\r\n}\r\n\r\nexport interface ContractState {\r\n  isInitialized: boolean\r\n  companyName: string\r\n  totalShares: number\r\n  totalProposals: number\r\n}\r\n\r\nexport const useContract = () => {\r\n  const { wallet, contract } = useWeb3()\r\n  const [contractState, setContractState] = useState<ContractState>({\r\n    isInitialized: false,\r\n    companyName: '',\r\n    totalShares: 0,\r\n    totalProposals: 0\r\n  })\r\n  const [proposals, setProposals] = useState<OnChainProposal[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  // Load contract state\r\n  const loadContractState = useCallback(async () => {\r\n    if (!contract.contract) return\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const [initialized, name, shares, totalProposals] = await Promise.all([\r\n        contract.contract.initialized().catch(() => false),\r\n        contract.contract.companyName().catch(() => 'CorporateDAO'),\r\n        contract.contract.totalShares().catch(() => ethers.getBigInt(0)),\r\n        contract.contract.getTotalProposals().catch(() => ethers.getBigInt(0))\r\n      ])\r\n\r\n      setContractState({\r\n        isInitialized: initialized,\r\n        companyName: name,\r\n        totalShares: Number(shares),\r\n        totalProposals: Number(totalProposals)\r\n      })\r\n\r\n    } catch (error: any) {\r\n      console.error('Error loading contract state:', error)\r\n      setError(`Failed to load contract state: ${error.message}`)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [contract.contract])\r\n\r\n  // Load all proposals\r\n  const loadProposals = useCallback(async () => {\r\n    if (!contract.contract || contractState.totalProposals === 0) return\r\n\r\n    try {\r\n      setLoading(true)\r\n      const proposalPromises = []\r\n\r\n      for (let i = 1; i <= contractState.totalProposals; i++) {\r\n        proposalPromises.push(loadSingleProposal(i))\r\n      }\r\n\r\n      const loadedProposals = await Promise.all(proposalPromises)\r\n      const validProposals = loadedProposals.filter(p => p !== null) as OnChainProposal[]\r\n      \r\n      setProposals(validProposals)\r\n    } catch (error: any) {\r\n      console.error('Error loading proposals:', error)\r\n      setError(`Failed to load proposals: ${error.message}`)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [contract.contract, contractState.totalProposals])\r\n\r\n  // Load single proposal\r\n  const loadSingleProposal = useCallback(async (id: number): Promise<OnChainProposal | null> => {\r\n    if (!contract.contract) return null\r\n\r\n    try {\r\n      // Get proposal info\r\n      const [startTime, proposalType, title, description, proposer, deadline, , active, executed, forVotes, againstVotes] = \r\n        await contract.contract.getProposalInfo(id)\r\n\r\n      return {\r\n        id,\r\n        proposalType: proposalType,\r\n        title: title || `Proposal ${id}`,\r\n        description: description || `Description for proposal ${id}`,\r\n        proposer,\r\n        deadline: Number(deadline),\r\n        startTime: Number(startTime),\r\n        active,\r\n        executed,\r\n        forVotes: Number(forVotes),\r\n        againstVotes: Number(againstVotes)\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error loading proposal ${id}:`, error)\r\n      return null\r\n    }\r\n  }, [contract.contract])\r\n\r\n  // Cast vote on blockchain\r\n  const castVote = useCallback(async (proposalId: number, choice: number): Promise<boolean> => {\r\n    if (!contract.contract || !wallet.account) {\r\n      toast.error('Please connect your wallet')\r\n      return false\r\n    }\r\n\r\n    try {\r\n      // Show loading toast\r\n      const loadingToastId = toast.loading('Preparing transaction...')\r\n\r\n      // Check if user is registered shareholder\r\n      try {\r\n        const [isRegistered] = await contract.contract.getShareholderInfo(wallet.account)\r\n        if (!isRegistered) {\r\n          toast.error('You must be a registered shareholder to vote', { id: loadingToastId })\r\n          return false\r\n        }\r\n      } catch (error) {\r\n        console.warn('Could not verify shareholder status, proceeding with vote')\r\n      }\r\n\r\n      // Estimate gas\r\n      let gasEstimate\r\n      try {\r\n        gasEstimate = await (contract.contract as any).vote.estimateGas(proposalId, choice)\r\n        console.log('Gas estimate:', gasEstimate.toString())\r\n      } catch (error: any) {\r\n        console.error('Gas estimation failed:', error)\r\n        toast.error(`Transaction may fail: ${error.reason || error.message}`, { id: loadingToastId })\r\n        return false\r\n      }\r\n\r\n      // Prepare transaction  \r\n      const gasLimit = (gasEstimate * 120n) / 100n // Add 20% buffer\r\n      \r\n      toast.loading('Please confirm transaction in MetaMask...', { id: loadingToastId })\r\n\r\n      // Send transaction\r\n      const tx = await (contract.contract as any).vote(proposalId, choice, {\r\n        gasLimit,\r\n        // gasPrice can be estimated by the wallet\r\n      })\r\n\r\n      toast.loading(`Transaction sent: ${tx.hash}`, { id: loadingToastId })\r\n\r\n      // Wait for confirmation\r\n      const receipt = await tx.wait()\r\n      \r\n      if (receipt.status === 1) {\r\n        toast.success(`Vote cast successfully! Block: ${receipt.blockNumber}`, { id: loadingToastId })\r\n        \r\n        // Reload proposals to get updated vote counts\r\n        await loadProposals()\r\n        \r\n        return true\r\n      } else {\r\n        toast.error('Transaction failed', { id: loadingToastId })\r\n        return false\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Voting error:', error)\r\n      \r\n      let errorMessage = 'Transaction failed'\r\n      \r\n      if (error.code === 4001) {\r\n        errorMessage = 'User rejected transaction'\r\n      } else if (error.code === -32603) {\r\n        errorMessage = 'Internal JSON-RPC error'\r\n      } else if (error.reason) {\r\n        errorMessage = error.reason\r\n      } else if (error.message) {\r\n        errorMessage = error.message\r\n      }\r\n\r\n      toast.error(errorMessage)\r\n      return false\r\n    }\r\n  }, [contract.contract, wallet.account, loadProposals])\r\n\r\n  // Create new proposal (for board members)\r\n  const createProposal = useCallback(async (\r\n    proposalType: number,\r\n    title: string,\r\n    durationDays: number = 7\r\n  ): Promise<boolean> => {\r\n    if (!contract.contract || !wallet.account) {\r\n      toast.error('Please connect your wallet')\r\n      return false\r\n    }\r\n\r\n    try {\r\n      const loadingToastId = toast.loading('Creating proposal...')\r\n\r\n      // Check if user is board member\r\n      try {\r\n        const isBoardMember = await contract.contract.isBoardMember(wallet.account)\r\n        if (!isBoardMember) {\r\n          toast.error('Only board members can create proposals', { id: loadingToastId })\r\n          return false\r\n        }\r\n      } catch (error) {\r\n        console.warn('Could not verify board member status')\r\n      }\r\n\r\n      // Estimate gas\r\n      const gasEstimate = await (contract.contract as any).createProposal.estimateGas(\r\n        proposalType,\r\n        title,\r\n        durationDays\r\n      )\r\n\r\n      const gasLimit = (gasEstimate * 120n) / 100n\r\n\r\n      toast.loading('Please confirm transaction in MetaMask...', { id: loadingToastId })\r\n\r\n      // Send transaction\r\n      const tx = await (contract.contract as any).createProposal(proposalType, title, durationDays, {\r\n        gasLimit\r\n      })\r\n\r\n      toast.loading(`Transaction sent: ${tx.hash}`, { id: loadingToastId })\r\n\r\n      const receipt = await tx.wait()\r\n\r\n      if (receipt.status === 1) {\r\n        toast.success(`Proposal created successfully! Block: ${receipt.blockNumber}`, { id: loadingToastId })\r\n        \r\n        // Reload contract state and proposals\r\n        await loadContractState()\r\n        await loadProposals()\r\n        \r\n        return true\r\n      } else {\r\n        toast.error('Transaction failed', { id: loadingToastId })\r\n        return false\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Create proposal error:', error)\r\n      \r\n      let errorMessage = 'Failed to create proposal'\r\n      if (error.code === 4001) {\r\n        errorMessage = 'User rejected transaction'\r\n      } else if (error.reason) {\r\n        errorMessage = error.reason\r\n      }\r\n\r\n      toast.error(errorMessage)\r\n      return false\r\n    }\r\n  }, [contract.contract, wallet.account, loadContractState, loadProposals])\r\n\r\n  // Check if user has voted on a proposal\r\n  const hasUserVoted = useCallback(async (): Promise<boolean> => {\r\n    if (!contract.contract || !wallet.account) return false\r\n\r\n    try {\r\n      // This would require a mapping in the contract to track votes\r\n      // For now, we'll return false and let the user attempt to vote\r\n      return false\r\n    } catch (error) {\r\n      console.error('Error checking vote status:', error)\r\n      return false\r\n    }\r\n  }, [contract.contract, wallet.account])\r\n\r\n  // Load data when contract becomes available\r\n  useEffect(() => {\r\n    if (contract.contract && wallet.isConnected) {\r\n      loadContractState()\r\n    }\r\n  }, [contract.contract, wallet.isConnected, loadContractState])\r\n\r\n  // Load proposals when contract state is loaded\r\n  useEffect(() => {\r\n    if (contractState.totalProposals > 0) {\r\n      loadProposals()\r\n    }\r\n  }, [contractState.totalProposals, loadProposals])\r\n\r\n  return {\r\n    contractState,\r\n    proposals,\r\n    loading,\r\n    error,\r\n    loadContractState,\r\n    loadProposals,\r\n    castVote,\r\n    createProposal,\r\n    hasUserVoted,\r\n    // Helper functions\r\n    getActiveProposals: () => proposals.filter(p => p.active && !p.executed),\r\n    getCompletedProposals: () => proposals.filter(p => !p.active || p.executed),\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport { Vote, AlertCircle, Wallet, Clock, Users, TrendingUp, CheckCircle, XCircle, MinusCircle, ChevronRight } from 'lucide-react'\r\nimport LoadingSpinner from '@/components/LoadingSpinner'\r\nimport { useContract, OnChainProposal } from '@/hooks/useContract'\r\nimport { ProposalTypeLabels as PROPOSAL_TYPE_LABELS, VoteChoice } from '@/types/web3'\r\nimport { formatAddress } from '@/utils/web3'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst VotingPage: React.FC = () => {\r\n  const { wallet, contract } = useWeb3()\r\n  const { castVote, getActiveProposals } = useContract()\r\n  const [selectedProposal, setSelectedProposal] = useState<OnChainProposal | null>(null)\r\n  const [votingInProgress, setVotingInProgress] = useState<number | null>(null)\r\n  const [showVoteModal, setShowVoteModal] = useState(false)\r\n\r\n  const activeProposals = getActiveProposals()\r\n\r\n  // If wallet is not connected\r\n  if (!wallet.isConnected) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <div className=\"glass-card p-8 text-center max-w-md mx-auto\">\r\n          <Wallet className=\"h-16 w-16 text-blue-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Connect Wallet</h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            Please connect your MetaMask wallet to participate in voting\r\n          </p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"btn-primary\"\r\n          >\r\n            Refresh Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If contract is loading\r\n  if (contract.isLoading) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading contract data...\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If contract failed to load\r\n  if (contract.error) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <div className=\"glass-card p-8 text-center max-w-md mx-auto\">\r\n          <AlertCircle className=\"h-16 w-16 text-red-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Contract Connection Failed</h2>\r\n          <p className=\"text-gray-300 mb-6\">{contract.error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"btn-primary\"\r\n          >\r\n            Reload\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleVote = async (proposalId: number, voteChoice: VoteChoice) => {\r\n    if (!wallet.isConnected || !contract.contract) {\r\n      toast.error('Please connect your wallet and ensure contract is loaded')\r\n      return\r\n    }\r\n\r\n    setVotingInProgress(proposalId)\r\n    \r\n    try {\r\n      // Cast real vote on blockchain using useContract hook\r\n      const success = await castVote(proposalId, voteChoice)\r\n      \r\n      if (success) {\r\n        setShowVoteModal(false)\r\n        setSelectedProposal(null)\r\n      }\r\n      \r\n    } catch (error: any) {\r\n      console.error('Voting error:', error)\r\n      toast.error(`Voting failed: ${error.message || 'Unknown error'}`)\r\n    } finally {\r\n      setVotingInProgress(null)\r\n    }\r\n  }\r\n\r\n  const openVoteModal = (proposal: OnChainProposal) => {\r\n    setSelectedProposal(proposal)\r\n    setShowVoteModal(true)\r\n  }\r\n\r\n  const getStatusColor = (proposal: OnChainProposal) => {\r\n    const totalVotes = proposal.forVotes + proposal.againstVotes\r\n    if (totalVotes === 0) return 'text-gray-400'\r\n    \r\n    const forPercent = (proposal.forVotes / totalVotes) * 100\r\n    if (forPercent >= 50) return 'text-green-400'\r\n    if (forPercent < 30) return 'text-red-400'\r\n    return 'text-yellow-400'\r\n  }\r\n\r\n  const getVotingProgress = (proposal: OnChainProposal) => {\r\n    const totalVotes = proposal.forVotes + proposal.againstVotes\r\n    if (totalVotes === 0) {\r\n      return { forPercent: 0, againstPercent: 0, abstainPercent: 0 }\r\n    }\r\n    \r\n    const forPercent = (proposal.forVotes / totalVotes) * 100\r\n    const againstPercent = (proposal.againstVotes / totalVotes) * 100\r\n    \r\n    return {\r\n      forPercent,\r\n      againstPercent,\r\n      abstainPercent: 0 // abstain votes not implemented in current contract\r\n    }\r\n  }\r\n\r\n  const formatTimeRemaining = (deadline: number) => {\r\n    const now = Math.floor(Date.now() / 1000)\r\n    const remaining = deadline - now\r\n    \r\n    if (remaining <= 0) return 'Expired'\r\n    \r\n    const days = Math.floor(remaining / (24 * 60 * 60))\r\n    const hours = Math.floor((remaining % (24 * 60 * 60)) / (60 * 60))\r\n    \r\n    if (days > 0) return `${days}d ${hours}h remaining`\r\n    if (hours > 0) return `${hours}h remaining`\r\n    return 'Less than 1h remaining'\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-8\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Vote className=\"h-8 w-8 text-blue-400\" />\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-white\">Participate in Voting</h1>\r\n            <p className=\"text-gray-300\">View active proposals and cast your votes</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Wallet Info */}\r\n      <div className=\"glass-card p-6 mb-8\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4\">Wallet Information</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div className=\"text-gray-300\">\r\n            <span className=\"text-white font-medium\">Address:</span>{' '}\r\n            <span className=\"font-mono\">{formatAddress(wallet.account || '')}</span>\r\n          </div>\r\n          <div className=\"text-gray-300\">\r\n            <span className=\"text-white font-medium\">Balance:</span>{' '}\r\n            <span className=\"text-green-400\">{wallet.balance || '0'} SEP</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\r\n            <span className=\"text-green-400 font-medium\">Connected</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Active Proposals */}\r\n      {activeProposals.length > 0 ? (\r\n        <div className=\"space-y-6\">\r\n          <h2 className=\"text-2xl font-bold text-white\">Active Proposals ({activeProposals.length})</h2>\r\n          \r\n          {activeProposals.map((proposal) => {\r\n            const progress = getVotingProgress(proposal)\r\n            return (\r\n              <div key={proposal.id} className=\"glass-card p-6 hover:bg-white/5 transition-all duration-200\">\r\n                <div className=\"flex items-start justify-between mb-4\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-3 mb-2\">\r\n                      <span className=\"px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm font-medium\">\r\n                        {PROPOSAL_TYPE_LABELS[proposal.proposalType as keyof typeof PROPOSAL_TYPE_LABELS]}\r\n                      </span>\r\n                      <span className=\"text-gray-400 text-sm\">ID #{proposal.id}</span>\r\n                    </div>\r\n                    \r\n                    <h3 className=\"text-xl font-semibold text-white mb-2\">{proposal.title}</h3>\r\n                    <p className=\"text-gray-300 mb-4 line-clamp-2\">{proposal.description}</p>\r\n                    \r\n                    <div className=\"flex items-center space-x-6 text-sm text-gray-400 mb-4\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Users className=\"h-4 w-4\" />\r\n                        <span>{proposal.forVotes + proposal.againstVotes} votes</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Clock className=\"h-4 w-4\" />\r\n                        <span>{formatTimeRemaining(proposal.deadline)}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <TrendingUp className=\"h-4 w-4\" />\r\n                        <span className={getStatusColor(proposal)}>\r\n                          {progress.forPercent.toFixed(1)}% approval\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Voting Progress Bar */}\r\n                    <div className=\"w-full bg-gray-700 rounded-full h-3 mb-4\">\r\n                      <div className=\"relative h-full rounded-full overflow-hidden\">\r\n                        <div \r\n                          className=\"absolute left-0 top-0 h-full bg-green-500 transition-all duration-300\"\r\n                          style={{ width: `${progress.forPercent}%` }}\r\n                        />\r\n                        <div \r\n                          className=\"absolute top-0 h-full bg-red-500 transition-all duration-300\"\r\n                          style={{ \r\n                            left: `${progress.forPercent}%`, \r\n                            width: `${progress.againstPercent}%` \r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Vote Counts */}\r\n                    <div className=\"flex space-x-6 text-sm\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n                        <span className=\"text-gray-300\">For: {proposal.forVotes}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n                        <span className=\"text-gray-300\">Against: {proposal.againstVotes}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"ml-6\">\r\n                    <button\r\n                      onClick={() => openVoteModal(proposal)}\r\n                      disabled={votingInProgress === proposal.id}\r\n                      className=\"btn-primary flex items-center space-x-2 disabled:opacity-50\"\r\n                    >\r\n                      {votingInProgress === proposal.id ? (\r\n                        <>\r\n                          <LoadingSpinner size=\"small\" />\r\n                          <span>Voting...</span>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Vote className=\"h-4 w-4\" />\r\n                          <span>Vote Now</span>\r\n                          <ChevronRight className=\"h-4 w-4\" />\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-16\">\r\n          <Vote className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">No Active Proposals</h2>\r\n          <p className=\"text-gray-400 mb-6\">\r\n            There are currently no active proposals available for voting.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Voting Modal */}\r\n      {showVoteModal && selectedProposal && (\r\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n          <div className=\"glass-card max-w-md w-full p-6\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-2xl font-bold text-white\">Cast Your Vote</h2>\r\n              <button\r\n                onClick={() => setShowVoteModal(false)}\r\n                className=\"text-gray-400 hover:text-white\"\r\n              >\r\n                <XCircle className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">{selectedProposal.title}</h3>\r\n              <p className=\"text-gray-300 text-sm mb-4\">{selectedProposal.description}</p>\r\n              \r\n              <div className=\"text-sm text-gray-400\">\r\n                <div>Proposal Type: {PROPOSAL_TYPE_LABELS[selectedProposal.proposalType as keyof typeof PROPOSAL_TYPE_LABELS]}</div>\r\n                <div>Total votes: {selectedProposal.forVotes + selectedProposal.againstVotes}</div>\r\n                <div>Time remaining: {formatTimeRemaining(selectedProposal.deadline)}</div>\r\n                <div>Status: {selectedProposal.active ? 'Active' : 'Inactive'}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"space-y-3 mb-6\">\r\n              <button\r\n                onClick={() => handleVote(selectedProposal.id, VoteChoice.FOR)}\r\n                disabled={votingInProgress !== null}\r\n                className=\"w-full bg-green-500/20 hover:bg-green-500/30 border border-green-500/50 text-green-300 py-3 px-4 rounded-lg font-semibold transition-all flex items-center justify-center space-x-2 disabled:opacity-50\"\r\n              >\r\n                <CheckCircle className=\"h-5 w-5\" />\r\n                <span>Vote For</span>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleVote(selectedProposal.id, VoteChoice.AGAINST)}\r\n                disabled={votingInProgress !== null}\r\n                className=\"w-full bg-red-500/20 hover:bg-red-500/30 border border-red-500/50 text-red-300 py-3 px-4 rounded-lg font-semibold transition-all flex items-center justify-center space-x-2 disabled:opacity-50\"\r\n              >\r\n                <XCircle className=\"h-5 w-5\" />\r\n                <span>Vote Against</span>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleVote(selectedProposal.id, VoteChoice.ABSTAIN)}\r\n                disabled={votingInProgress !== null}\r\n                className=\"w-full bg-yellow-500/20 hover:bg-yellow-500/30 border border-yellow-500/50 text-yellow-300 py-3 px-4 rounded-lg font-semibold transition-all flex items-center justify-center space-x-2 disabled:opacity-50\"\r\n              >\r\n                <MinusCircle className=\"h-5 w-5\" />\r\n                <span>Abstain</span>\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"bg-blue-500/10 border border-blue-500/30 rounded-lg p-3 mb-4\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <AlertCircle className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                <div>\r\n                  <p className=\"text-blue-300 text-sm font-semibold mb-1\">Private Voting</p>\r\n                  <p className=\"text-blue-200/80 text-xs\">\r\n                    Your vote will be encrypted using FHE technology to ensure complete privacy while maintaining verifiability.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button\r\n              onClick={() => setShowVoteModal(false)}\r\n              className=\"w-full bg-white/20 hover:bg-white/30 text-white py-2 px-4 rounded-lg font-semibold transition-all\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VotingPage","import React, { useState, useMemo } from 'react'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport { FileText, Plus, Wallet, Clock, Users, TrendingUp, Search, Eye, Vote, ChevronRight } from 'lucide-react'\r\nimport LoadingSpinner from '@/components/LoadingSpinner'\r\nimport { useContract, OnChainProposal } from '@/hooks/useContract'\r\nimport { ProposalTypeLabels as PROPOSAL_TYPE_LABELS } from '@/types/web3'\r\nimport { formatAddress } from '@/utils/web3'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProposalsPage: React.FC = () => {\r\n  const { wallet, contract } = useWeb3()\r\n  const { proposals, loading, error } = useContract()\r\n  const [selectedTab, setSelectedTab] = useState<'all' | 'active' | 'pending' | 'completed'>('all')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n\r\n  // Helper functions for proposal status\r\n  const getProposalStatus = (proposal: OnChainProposal): 'active' | 'completed' | 'pending' => {\r\n    if (!proposal.active || proposal.executed) return 'completed'\r\n    const now = Math.floor(Date.now() / 1000)\r\n    if (proposal.deadline < now) return 'completed'\r\n    return 'active'\r\n  }\r\n\r\n  const getVotingProgress = (proposal: OnChainProposal) => {\r\n    const totalVotes = proposal.forVotes + proposal.againstVotes\r\n    if (totalVotes === 0) {\r\n      return { forPercent: 0, againstPercent: 0, abstainPercent: 0 }\r\n    }\r\n    \r\n    const forPercent = (proposal.forVotes / totalVotes) * 100\r\n    const againstPercent = (proposal.againstVotes / totalVotes) * 100\r\n    \r\n    return {\r\n      forPercent,\r\n      againstPercent,\r\n      abstainPercent: 0 // abstain votes not implemented in current contract\r\n    }\r\n  }\r\n\r\n  const formatTimeRemaining = (deadline: number) => {\r\n    const now = Math.floor(Date.now() / 1000)\r\n    const remaining = deadline - now\r\n    \r\n    if (remaining <= 0) return 'Expired'\r\n    \r\n    const days = Math.floor(remaining / (24 * 60 * 60))\r\n    const hours = Math.floor((remaining % (24 * 60 * 60)) / (60 * 60))\r\n    \r\n    if (days > 0) return `${days}d ${hours}h remaining`\r\n    if (hours > 0) return `${hours}h remaining`\r\n    return 'Less than 1h remaining'\r\n  }\r\n\r\n  // Filter proposals based on tab and search\r\n  const filteredProposals = useMemo(() => {\r\n    let filtered = proposals\r\n\r\n    // Filter by status\r\n    if (selectedTab !== 'all') {\r\n      filtered = filtered.filter(proposal => {\r\n        const status = getProposalStatus(proposal)\r\n        return status === selectedTab\r\n      })\r\n    }\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(proposal => \r\n        proposal.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        proposal.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        PROPOSAL_TYPE_LABELS[proposal.proposalType as keyof typeof PROPOSAL_TYPE_LABELS].toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    }\r\n\r\n    return filtered\r\n  }, [proposals, selectedTab, searchTerm])\r\n\r\n  // If wallet is not connected\r\n  if (!wallet.isConnected) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <div className=\"glass-card p-8 text-center max-w-md mx-auto\">\r\n          <Wallet className=\"h-16 w-16 text-blue-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Connect Wallet</h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            Please connect your MetaMask wallet to view proposals\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If contract is loading\r\n  if (contract.isLoading || loading) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading proposal data...\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If there's an error\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <div className=\"glass-card p-8 text-center max-w-md mx-auto\">\r\n          <FileText className=\"h-16 w-16 text-red-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Error Loading Proposals</h2>\r\n          <p className=\"text-gray-300 mb-6\">{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"btn-primary\"\r\n          >\r\n            Reload\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const styles = {\r\n      active: 'bg-green-500/20 text-green-300 border-green-500/30',\r\n      pending: 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30', \r\n      completed: 'bg-blue-500/20 text-blue-300 border-blue-500/30',\r\n      executed: 'bg-purple-500/20 text-purple-300 border-purple-500/30'\r\n    }\r\n    \r\n    return (\r\n      <span className={`px-2 py-1 rounded-full text-xs font-medium border ${styles[status as keyof typeof styles] || styles.pending}`}>\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const getStatusColor = (proposal: OnChainProposal) => {\r\n    const progress = getVotingProgress(proposal)\r\n    if (progress.forPercent >= 50) return 'text-green-400'\r\n    if (progress.forPercent < 30) return 'text-red-400'\r\n    return 'text-yellow-400'\r\n  }\r\n\r\n  const tabs = [\r\n    { id: 'all', label: 'All', count: proposals.length },\r\n    { id: 'active', label: 'Active', count: proposals.filter(p => getProposalStatus(p) === 'active').length },\r\n    { id: 'pending', label: 'Pending Review', count: proposals.filter(p => getProposalStatus(p) === 'pending').length },\r\n    { id: 'completed', label: 'Completed', count: proposals.filter(p => getProposalStatus(p) === 'completed').length }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-8\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <FileText className=\"h-8 w-8 text-blue-400\" />\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-white\">Proposal Management</h1>\r\n            <p className=\"text-gray-300\">View and manage corporate governance proposals</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <button className=\"btn-primary flex items-center space-x-2\">\r\n          <Plus className=\"h-4 w-4\" />\r\n          <span>Create Proposal</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <div className=\"glass-card p-6 mb-8\">\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\r\n          {/* Search */}\r\n          <div className=\"relative flex-1 lg:max-w-md\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search proposals...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-400\"\r\n            />\r\n          </div>\r\n\r\n          {/* Tab Filters */}\r\n          <div className=\"flex space-x-2 overflow-x-auto\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setSelectedTab(tab.id as any)}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-all whitespace-nowrap ${\r\n                  selectedTab === tab.id\r\n                    ? 'bg-blue-500 text-white'\r\n                    : 'bg-white/10 text-gray-300 hover:bg-white/20'\r\n                }`}\r\n              >\r\n                {tab.label} ({tab.count})\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Proposals List */}\r\n      {filteredProposals.length > 0 ? (\r\n        <div className=\"space-y-6\">\r\n          {filteredProposals.map((proposal) => {\r\n            const progress = getVotingProgress(proposal)\r\n            return (\r\n              <div key={proposal.id} className=\"glass-card p-6 hover:bg-white/5 transition-all duration-200\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    {/* Header */}\r\n                    <div className=\"flex items-center space-x-3 mb-3\">\r\n                      <span className=\"px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm font-medium\">\r\n                        {PROPOSAL_TYPE_LABELS[proposal.proposalType as keyof typeof PROPOSAL_TYPE_LABELS]}\r\n                      </span>\r\n                      {getStatusBadge(getProposalStatus(proposal))}\r\n                      <span className=\"text-gray-400 text-sm\">ID #{proposal.id}</span>\r\n                    </div>\r\n                    \r\n                    {/* Title and Description */}\r\n                    <h3 className=\"text-xl font-semibold text-white mb-2\">{proposal.title}</h3>\r\n                    <p className=\"text-gray-300 mb-4 line-clamp-3\">{proposal.description}</p>\r\n                    \r\n                    {/* Metadata */}\r\n                    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\r\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\r\n                        <Users className=\"h-4 w-4\" />\r\n                        <span>{proposal.forVotes + proposal.againstVotes} votes</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\r\n                        <Clock className=\"h-4 w-4\" />\r\n                        <span>{formatTimeRemaining(proposal.deadline)}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2 text-sm\">\r\n                        <TrendingUp className=\"h-4 w-4 text-gray-400\" />\r\n                        <span className={getStatusColor(proposal)}>\r\n                          {progress.forPercent.toFixed(1)}% approval\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-400\">\r\n                        <span>Creator: {formatAddress(proposal.proposer)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Progress Bar (only for active proposals) */}\r\n                    {getProposalStatus(proposal) === 'active' && (\r\n                      <div className=\"w-full bg-gray-700 rounded-full h-2 mb-4\">\r\n                        <div className=\"relative h-full rounded-full overflow-hidden\">\r\n                          <div \r\n                            className=\"absolute left-0 top-0 h-full bg-green-500 transition-all duration-300\"\r\n                            style={{ width: `${progress.forPercent}%` }}\r\n                          />\r\n                          <div \r\n                            className=\"absolute top-0 h-full bg-red-500 transition-all duration-300\"\r\n                            style={{ \r\n                              left: `${progress.forPercent}%`, \r\n                              width: `${progress.againstPercent}%` \r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Vote Distribution */}\r\n                    <div className=\"flex space-x-6 text-sm\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n                        <span className=\"text-gray-300\">For: {proposal.forVotes}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n                        <span className=\"text-gray-300\">Against: {proposal.againstVotes}</span>\r\n                      </div>\r\n                      <div className=\"text-gray-400\">\r\n                        Required: 50% majority\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Action Buttons */}\r\n                  <div className=\"ml-6 flex flex-col space-y-2\">\r\n                    <button className=\"btn-secondary flex items-center space-x-2 text-sm\">\r\n                      <Eye className=\"h-4 w-4\" />\r\n                      <span>View Details</span>\r\n                    </button>\r\n                    \r\n                    {getProposalStatus(proposal) === 'active' && (\r\n                      <Link \r\n                        to={`/vote`}\r\n                        className=\"btn-primary flex items-center space-x-2 text-sm\"\r\n                      >\r\n                        <Vote className=\"h-4 w-4\" />\r\n                        <span>Vote Now</span>\r\n                        <ChevronRight className=\"h-3 w-3\" />\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-16\">\r\n          <FileText className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">\r\n            {searchTerm ? 'No Matching Proposals' : 'No Proposals Found'}\r\n          </h2>\r\n          <p className=\"text-gray-400 mb-6\">\r\n            {searchTerm \r\n              ? `No proposals match your search for \"${searchTerm}\"`\r\n              : `There are no ${selectedTab === 'all' ? '' : selectedTab + ' '}proposals at the moment.`\r\n            }\r\n          </p>\r\n          {searchTerm && (\r\n            <button\r\n              onClick={() => setSearchTerm('')}\r\n              className=\"btn-secondary\"\r\n            >\r\n              Clear Search\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Summary Stats */}\r\n      <div className=\"mt-12 grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <div className=\"glass-card p-6 text-center\">\r\n          <div className=\"text-2xl font-bold text-blue-400 mb-1\">{proposals.length}</div>\r\n          <div className=\"text-gray-300 text-sm\">Total Proposals</div>\r\n        </div>\r\n        <div className=\"glass-card p-6 text-center\">\r\n          <div className=\"text-2xl font-bold text-green-400 mb-1\">\r\n            {proposals.filter(p => getProposalStatus(p) === 'active').length}\r\n          </div>\r\n          <div className=\"text-gray-300 text-sm\">Active Proposals</div>\r\n        </div>\r\n        <div className=\"glass-card p-6 text-center\">\r\n          <div className=\"text-2xl font-bold text-purple-400 mb-1\">\r\n            {proposals.reduce((acc, p) => acc + p.forVotes + p.againstVotes, 0)}\r\n          </div>\r\n          <div className=\"text-gray-300 text-sm\">Total Votes Cast</div>\r\n        </div>\r\n        <div className=\"glass-card p-6 text-center\">\r\n          <div className=\"text-2xl font-bold text-yellow-400 mb-1\">\r\n            {proposals.filter(p => getProposalStatus(p) === 'active').length > 0 ? \r\n              Math.round(proposals.filter(p => getProposalStatus(p) === 'active').reduce((acc, p) => {\r\n                const progress = getVotingProgress(p)\r\n                return acc + progress.forPercent\r\n              }, 0) / proposals.filter(p => getProposalStatus(p) === 'active').length) : 0\r\n            }%\r\n          </div>\r\n          <div className=\"text-gray-300 text-sm\">Avg. Approval Rate</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProposalsPage","import React from 'react'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\nimport { BarChart3, Users, Vote, TrendingUp, Wallet } from 'lucide-react'\r\nimport LoadingSpinner from '@/components/LoadingSpinner'\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const { wallet, contract } = useWeb3()\r\n\r\n  // If wallet is not connected\r\n  if (!wallet.isConnected) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <div className=\"glass-card p-8 text-center max-w-md mx-auto\">\r\n          <Wallet className=\"h-16 w-16 text-blue-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Connect Wallet</h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            Please connect your MetaMask wallet to access the dashboard\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If contract is loading\r\n  if (contract.isLoading) {\r\n    return (\r\n      <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n        <LoadingSpinner size=\"large\" text=\"Loading dashboard data...\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const mockStats = [\r\n    { label: 'My Votes', value: '12', icon: Vote, color: 'text-blue-400' },\r\n    { label: 'Participated Proposals', value: '8', icon: BarChart3, color: 'text-green-400' },\r\n    { label: 'Shareholding Ratio', value: '2.5%', icon: TrendingUp, color: 'text-purple-400' },\r\n    { label: 'Voting Power', value: '125', icon: Users, color: 'text-orange-400' }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header */}\r\n      <div>\r\n        <h1 className=\"text-4xl font-bold text-white mb-2 flex items-center space-x-3\">\r\n          <BarChart3 className=\"h-8 w-8 text-blue-400\" />\r\n          <span>Dashboard</span>\r\n        </h1>\r\n        <p className=\"text-gray-400\">\r\n          View your voting records and participation statistics\r\n        </p>\r\n      </div>\r\n\r\n      {/* Stats Grid */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {mockStats.map((stat, index) => {\r\n          const Icon = stat.icon\r\n          return (\r\n            <div key={index} className=\"glass-card p-6 text-center\">\r\n              <Icon className={`h-8 w-8 mx-auto mb-3 ${stat.color}`} />\r\n              <div className=\"text-3xl font-bold text-white mb-2\">{stat.value}</div>\r\n              <div className=\"text-gray-300 text-sm\">{stat.label}</div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"glass-card p-6\">\r\n        <h2 className=\"text-xl font-bold text-white mb-4\">Recent Activity</h2>\r\n        <div className=\"space-y-4\">\r\n          {[1, 2, 3].map((i) => (\r\n            <div key={i} className=\"bg-white/5 rounded-lg p-4 animate-pulse\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <div className=\"h-4 bg-white/10 rounded w-1/3\"></div>\r\n                <div className=\"h-3 bg-white/10 rounded w-20\"></div>\r\n              </div>\r\n              <div className=\"h-3 bg-white/10 rounded w-2/3 mb-2\"></div>\r\n              <div className=\"h-3 bg-white/10 rounded w-1/2\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Coming Soon */}\r\n      <div className=\"glass-card p-8 text-center\">\r\n        <BarChart3 className=\"h-16 w-16 text-blue-400 mx-auto mb-4 opacity-50\" />\r\n        <h2 className=\"text-2xl font-bold text-white mb-4\">Full Dashboard Coming Soon</h2>\r\n        <p className=\"text-gray-400 max-w-md mx-auto\">\r\n          Detailed voting statistics, historical records, and personal analytics features are in development\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardPage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Home, ArrowLeft } from 'lucide-react'\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-[60vh] flex items-center justify-center\">\r\n      <div className=\"text-center space-y-6\">\r\n        {/* 404 Number */}\r\n        <div className=\"text-8xl md:text-9xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\r\n          404\r\n        </div>\r\n\r\n        {/* Error Message */}\r\n        <div className=\"space-y-2\">\r\n          <h1 className=\"text-2xl md:text-3xl font-bold text-white\">\r\n            Page Not Found\r\n          </h1>\r\n          <p className=\"text-gray-400 max-w-md mx-auto\">\r\n            Sorry, the page you are looking for does not exist or has been removed.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Back Button */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"gradient-button flex items-center space-x-2 px-6 py-3\"\r\n          >\r\n            <Home className=\"h-5 w-5\" />\r\n            <span>Return Home</span>\r\n          </Link>\r\n          \r\n          <button\r\n            onClick={() => window.history.back()}\r\n            className=\"btn-secondary flex items-center space-x-2 px-6 py-3\"\r\n          >\r\n            <ArrowLeft className=\"h-5 w-5\" />\r\n            <span>Go Back</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Helpful Links */}\r\n        <div className=\"pt-8 border-t border-white/10\">\r\n          <p className=\"text-gray-400 text-sm mb-4\">You might want to visit:</p>\r\n          <div className=\"flex flex-wrap justify-center gap-4 text-sm\">\r\n            <Link to=\"/vote\" className=\"text-blue-400 hover:text-blue-300 transition-colors\">\r\n              Participate in Voting\r\n            </Link>\r\n            <Link to=\"/proposals\" className=\"text-blue-400 hover:text-blue-300 transition-colors\">\r\n              View Proposals\r\n            </Link>\r\n            <Link to=\"/dashboard\" className=\"text-blue-400 hover:text-blue-300 transition-colors\">\r\n              Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport { useWeb3 } from '@/providers/Web3Provider'\r\n\r\n// Components\r\nimport Header from '@/components/Header'\r\nimport Footer from '@/components/Footer'\r\nimport LoadingSpinner from '@/components/LoadingSpinner'\r\n\r\n// Pages\r\nimport HomePage from '@/components/pages/HomePage'\r\nimport VotingPage from '@/components/pages/VotingPage'\r\nimport ProposalsPage from '@/components/pages/ProposalsPage'\r\nimport DashboardPage from '@/components/pages/DashboardPage'\r\nimport NotFoundPage from '@/components/pages/NotFoundPage'\r\n\r\nconst App: React.FC = () => {\r\n  const { wallet, contract } = useWeb3()\r\n\r\n  // Show loading state\r\n  if (wallet.isConnecting || contract.isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <LoadingSpinner size=\"large\" text=\"Connecting to blockchain...\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900\">\r\n      {/* Header navigation */}\r\n      <Header />\r\n      \r\n      {/* Main content area */}\r\n      <main className=\"flex-1 container mx-auto px-4 py-8\">\r\n        <Routes>\r\n          {/* Home page */}\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          \r\n          {/* Voting page */}\r\n          <Route path=\"/vote\" element={<VotingPage />} />\r\n          <Route path=\"/vote/:proposalId\" element={<VotingPage />} />\r\n          \r\n          {/* Proposals page */}\r\n          <Route path=\"/proposals\" element={<ProposalsPage />} />\r\n          <Route path=\"/proposals/create\" element={<ProposalsPage />} />\r\n          \r\n          {/* Dashboard page */}\r\n          <Route path=\"/dashboard\" element={<DashboardPage />} />\r\n          \r\n          {/* 404 page */}\r\n          <Route path=\"*\" element={<NotFoundPage />} />\r\n        </Routes>\r\n      </main>\r\n      \r\n      {/* Footer */}\r\n      <Footer />\r\n      \r\n      {/* Global error notifications */}\r\n      {wallet.error && (\r\n        <div className=\"fixed bottom-4 right-4 max-w-sm\">\r\n          <div className=\"bg-red-500/90 backdrop-blur-md text-white px-4 py-3 rounded-lg shadow-lg border border-red-400/30\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <svg className=\"w-5 h-5 text-red-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              <p className=\"text-sm font-medium\">{wallet.error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {contract.error && (\r\n        <div className=\"fixed bottom-4 left-4 max-w-sm\">\r\n          <div className=\"bg-orange-500/90 backdrop-blur-md text-white px-4 py-3 rounded-lg shadow-lg border border-orange-400/30\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <svg className=\"w-5 h-5 text-orange-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              <p className=\"text-sm font-medium\">{contract.error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { Toaster } from 'react-hot-toast'\r\n\r\nimport App from './App'\r\nimport { Web3Provider } from './providers/Web3Provider'\r\nimport './index.css'\r\n\r\n// Create a React Query client\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: 3,\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n    },\r\n  },\r\n})\r\n\r\n// Hide loading screen\r\nconst hideLoadingScreen = () => {\r\n  const loadingScreen = document.getElementById('loading-screen')\r\n  if (loadingScreen) {\r\n    loadingScreen.style.opacity = '0'\r\n    setTimeout(() => {\r\n      loadingScreen.style.display = 'none'\r\n    }, 500)\r\n  }\r\n}\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Web3Provider>\r\n          <App />\r\n          <Toaster\r\n            position=\"top-right\"\r\n            toastOptions={{\r\n              duration: 4000,\r\n              style: {\r\n                background: '#363636',\r\n                color: '#fff',\r\n              },\r\n              success: {\r\n                style: {\r\n                  background: '#10b981',\r\n                },\r\n              },\r\n              error: {\r\n                style: {\r\n                  background: '#ef4444',\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </Web3Provider>\r\n      </QueryClientProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n)\r\n\r\n// Hide loading screen after React is rendered\r\nsetTimeout(hideLoadingScreen, 500)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","_temp","relative","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","_temp2","React.useMemo","useRoutes","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","React.createElement","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","_dataRouterState","_future","errors","errorIndex","renderFallback","fallbackIndex","loaderData","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","routeId","router","id","alreadyWarned$1","alreadyWarned","warnOnce","logDeprecation","flag","msg","link","logV6DeprecationWarnings","renderFuture","routerFuture","Route","_props","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","element","React.isValidElement","treePath","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","_excluded","REACT_ROUTER_VERSION","START_TRANSITION","startTransitionImpl","React","BrowserRouter","_ref4","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","React.useEffect","UNSAFE_logV6DeprecationWarnings","isBrowser","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","ref","onClick","reloadDocument","preventScrollReset","viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","currentUrl","targetUrl","internalOnClick","useLinkClickHandler","handleClick","replaceProp","navigate","Subscribable","isServer","noop","functionalUpdate","updater","input","isValidTimeout","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","val","isPlainObject","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","#focused","#cleanup","#setup","onFocus","setup","focused","isFocused","focusManager","OnlineManager","#online","onOnline","onlineListener","offlineListener","online","onlineManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","isCancelledError","createRetryer","config","isRetryCancelled","isResolved","continueFn","cancel","cancelOptions","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","delay","shouldRetry","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","notifyManager","Removable","#gcTimeout","newGcTime","Query","#initialState","#revertState","#cache","#retryer","#defaultOptions","#abortSignalConsumed","getDefaultState","newData","#dispatch","setStateOptions","promise","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","context","onError","reducer","fetchState","hasData","initialDataUpdatedAt","QueryCache","#queries","queryHash","queryInMap","defaultedFilters","queries","Mutation","#observers","#mutationCache","variables","restored","isPaused","MutationCache","#mutations","#mutationId","scope","scopeFor","mutations","firstPendingMutation","pausedMutations","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","QueryClient","#queryCache","#queryDefaults","#mutationDefaults","#mountCount","#unsubscribeFocus","#unsubscribeOnline","cachedData","defaultedOptions","queryCache","refetchFilters","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","QueryClientProvider","jsx","ProposalTypeLabels","VoteChoice","Web3Error","code","details","Web3ErrorCode","CONTRACT_ADDRESS","SEPOLIA_CONFIG","CONTRACT_ABI","ERROR_MESSAGES","isMetaMaskInstalled","getProvider","ethers.BrowserProvider","requestAccounts","accounts","getCurrentChainId","chainId","switchToNetwork","networkConfig","chainIdHex","addError","switchToSepolia","getBalance","address","provider","balance","ethers.formatEther","formatAddress","handleMetaMaskError","getExplorerLink","initialState","web3Reducer","Web3Context","createContext","Web3Provider","dispatch","useReducer","initializeContract","useCallback","signer","contract","ethers.Contract","errorMessage","toast","getWalletBalance","connectWallet","account","expectedChainId","balanceError","web3Error","disconnectWallet","refreshWallet","useEffect","handleAccountsChanged","handleChainChanged","newChainId","handleDisconnect","lastAccount","contextValue","useWeb3","useContext","Header","wallet","isMobileMenuOpen","setIsMobileMenuOpen","useState","isWalletMenuOpen","setIsWalletMenuOpen","navigation","handleConnectWallet","toggleMobileMenu","toggleWalletMenu","jsxs","Shield","Wallet","ChevronDown","LogOut","Fragment","X","Menu","Footer","currentYear","ExternalLink","Github","LoadingSpinner","size","text","className","spinnerClass","HomePage","features","Lock","Users","Zap","stats","Vote","TrendingUp","CheckCircle","proposalTypes","ArrowRight","Globe","stat","Icon","feature","useContract","contractState","setContractState","proposals","setProposals","loading","setLoading","setError","loadContractState","initialized","name","shares","totalProposals","ethers.getBigInt","loadProposals","proposalPromises","loadSingleProposal","validProposals","startTime","proposalType","title","description","proposer","deadline","active","executed","forVotes","againstVotes","castVote","proposalId","choice","loadingToastId","isRegistered","gasEstimate","gasLimit","tx","receipt","createProposal","durationDays","hasUserVoted","VotingPage","getActiveProposals","selectedProposal","setSelectedProposal","votingInProgress","setVotingInProgress","showVoteModal","setShowVoteModal","activeProposals","AlertCircle","handleVote","voteChoice","openVoteModal","proposal","getStatusColor","totalVotes","forPercent","getVotingProgress","againstPercent","formatTimeRemaining","now","remaining","days","hours","progress","PROPOSAL_TYPE_LABELS","Clock","ChevronRight","XCircle","MinusCircle","ProposalsPage","selectedTab","setSelectedTab","searchTerm","setSearchTerm","getProposalStatus","filteredProposals","useMemo","filtered","FileText","getStatusBadge","styles","tabs","Plus","Search","tab","Eye","acc","DashboardPage","mockStats","BarChart3","NotFoundPage","Home","ArrowLeft","App","queryClient","hideLoadingScreen","loadingScreen","ReactDOM","Toaster"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}