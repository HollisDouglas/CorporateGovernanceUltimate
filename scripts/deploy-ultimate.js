const { ethers } = require("hardhat");

async function main() {
    console.log("üéØ Deploying ULTIMATE Corporate Governance...");
    console.log("Êú∫ÂØÜËÇ°‰∏úÊäïÁ•® - ‰ºÅ‰∏öÂÜ≥Á≠ñÈöêÁßÅÊäïÁ•®");
    console.log("(Stack Too Deep ÁªàÊûÅËß£ÂÜ≥ÊñπÊ°à)");

    const [deployer] = await ethers.getSigners();
    console.log(`üë§ Deployer: ${deployer.address}`);

    console.log("\nüì¶ Deploying CorporateGovernanceUltimate...");
    const Contract = await ethers.getContractFactory("CorporateGovernanceUltimate");
    const contract = await Contract.deploy();
    await contract.waitForDeployment();
    
    const contractAddress = await contract.getAddress();
    console.log(`‚úÖ SUCCESS! Contract deployed at: ${contractAddress}`);

    // Quick setup
    await contract.initCompany("Êú∫ÂØÜÊäïÁ•®‰ºÅ‰∏öÈõÜÂõ¢", 1000000);
    console.log("‚úÖ Company initialized");

    const [, member] = await ethers.getSigners();
    if (member) {
        await contract.addBoard(member.address);
        console.log(`‚úÖ Board member added: ${member.address}`);
    }

    await contract.addShareholder(deployer.address, 50000, "ÂàõÂßã‰∫∫");
    await contract.addShareholder(member?.address || deployer.address, 30000, "ÊäïËµÑËÄÖ");
    console.log("‚úÖ Shareholders registered");

    await contract.createProposal(0, "Ëë£‰∫ã‰ºöÈÄâ‰∏æÊèêÊ°à", 7);
    await contract.createProposal(1, "Âπ¥Â∫¶È¢ÑÁÆóÂÆ°Êâπ", 5);
    console.log("‚úÖ Sample proposals created");

    console.log("\n" + "=".repeat(70));
    console.log("üéâ ULTIMATE DEPLOYMENT SUCCESS!");
    console.log("üéâ Stack Too DeepÈóÆÈ¢òÂ∑≤ÂΩªÂ∫ïËß£ÂÜ≥ÔºÅ");
    console.log("=".repeat(70));
    
    console.log(`\nüìä ÈÉ®ÁΩ≤‰ø°ÊÅØ:`);
    console.log(`ÂêàÁ∫¶Âú∞ÂùÄ: ${contractAddress}`);
    console.log(`ÁΩëÁªú: ${network.name}`);
    console.log(`ÂÖ¨Âè∏: ${await contract.companyName()}`);
    console.log(`ÊÄªÊèêÊ°àÊï∞: ${await contract.getTotalProposals()}`);

    const fs = require('fs');
    fs.writeFileSync('./ultimate-deployment.json', JSON.stringify({
        contractAddress,
        network: network.name,
        contractName: "CorporateGovernanceUltimate",
        theme: "Êú∫ÂØÜËÇ°‰∏úÊäïÁ•® - ‰ºÅ‰∏öÂÜ≥Á≠ñÈöêÁßÅÊäïÁ•®",
        stackOptimized: true,
        compilationGuaranteed: true,
        deployedAt: new Date().toISOString()
    }, null, 2));
    
    console.log(`\nüíæ ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òËá≥: ultimate-deployment.json`);
    
    console.log(`\nüî• Á≥ªÁªüÁâπÊÄß:`);
    console.log(`‚Ä¢ ‚úÖ 100%ÁºñËØë‰øùËØÅ - Stack Too DeepÈóÆÈ¢òÂ∑≤Ëß£ÂÜ≥`);
    console.log(`‚Ä¢ ‚úÖ Êú∫ÂØÜÊäïÁ•®ÂäüËÉΩ - castConfidentialVote()`);
    console.log(`‚Ä¢ ‚úÖ ‰ºÅ‰∏öÊ≤ªÁêÜÂÆåÊï¥ÊµÅÁ®ã - 6ÁßçÊèêÊ°àÁ±ªÂûã`);
    console.log(`‚Ä¢ ‚úÖ Ëë£‰∫ã‰ºöÊùÉÈôêÁÆ°ÁêÜ - ÂàÜÁ∫ßËÆøÈóÆÊéßÂà∂`);
    console.log(`‚Ä¢ ‚úÖ ‰∏ì‰∏öUIÂÖºÂÆπ - ÂâçÁ´ØÊé•Âè£ÂÆåÊï¥`);
    
    console.log(`\nüöÄ Á´ãÂç≥‰ΩøÁî®:`);
    console.log(`1. npm run serve`);
    console.log(`2. Êõ¥Êñ∞ÂâçÁ´Ø CONTRACT_ADDRESS: ${contractAddress}`);
    console.log(`3. ËÆøÈóÆ: http://localhost:3018/corporate-governance.html`);
    console.log(`4. ËÆøÈóÆ: http://localhost:3018/board-dashboard.html`);
    
    console.log(`\nüéØ ËøôÊòØÊúÄÁªàÁöÑ„ÄÅÁªùÂØπÂèØ‰ª•ÁºñËØëÊàêÂäüÁöÑÁâàÊú¨ÔºÅ`);
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exit(1);
    });